#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{pstricks}
\usepackage{hyperref}
\renewcommand{\labelenumi}{(\arabic{enumi})}
\renewcommand{\labelenumii}{(\arabic{enumi}.\arabic{enumii})}
\renewcommand{\labelenumiii}{(\arabic{enumi}.\arabic{enumii}.\arabic{enumiii})}
\renewcommand{\labelenumiv}{(\arabic{enumi}.\arabic{enumii}.\arabic{enumiii}.\arabic{enumiv})}
\end_preamble
\use_default_options true
\begin_modules
theorems-ams
theorems-sec
\end_modules
\maintain_unincluded_children false
\language ngerman
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1.5cm
\topmargin 1.5cm
\rightmargin 1.5cm
\bottommargin 1.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation 0bp
\quotes_language german
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
\noindent
Effiziente Algorithmen 1 - Zusammenfassung
\end_layout

\begin_layout Author
\noindent
Patrick Dammann
\end_layout

\begin_layout Date
\noindent
21.05.2017
\end_layout

\begin_layout Standard

\size footnotesize
\begin_inset Tabular
<lyxtabular version="3" rows="41" columns="5">
<features booktabs="true" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<column alignment="right" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Zweck
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Name
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Laufzeit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Kommentar
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Link
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Durchsuchen
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
Breitensuche
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mathcal{O}\left(\text{Adj.}\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Laufzeit je nach Adjazenzstruktur
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset ref
LatexCommand vref
reference "BFS"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
Tiefensuche
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mathcal{O}\left(\text{Adj.}\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset ref
LatexCommand vref
reference "DFS"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Topologische Sortierung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
Topsort
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mathcal{O}\left(\text{Adj.}\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
findet auch Kreise
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset ref
LatexCommand vref
reference "TopSort"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Komponenten finden
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
StrongComponents
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mathcal{O}\left(\text{Adj.}\right)$
\end_inset

(?)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset ref
LatexCommand vref
reference "StrongComponents"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Minimum Spanning Tree
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
Boruvka
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
¯
\backslash
_(
\begin_inset Formula $\ddot{\smile}$
\end_inset

)_/¯
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
paralleler Ansatz
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset ref
LatexCommand vref
reference "Boruvka"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
Kruskal
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mathcal{O}\left(E\log V\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Kanten sortieren
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset ref
LatexCommand vref
reference "Kruskal"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
Prim
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $-$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
baut MST von Startknoten
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset ref
LatexCommand vref
reference "Prim"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mathcal{O}\left(VE\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Implementierung
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset ref
LatexCommand vref
reference "Prim1"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mathcal{O}\left(V^{2}\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Bessere Impl., sucht sinnvoller
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="right" valignment="middle" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset ref
LatexCommand vref
reference "Prim2"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mathcal{O}\left(E\log V\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mathcal{O}\left(E+V\log V\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
Round Robin
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mathcal{O}\left(E\log\log V\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
baut MST von überall
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset ref
LatexCommand vref
reference "RoundRobin"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
1-Baum
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
OneTree
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
-> MST
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Untere Schranke TSP
\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset ref
LatexCommand vref
reference "OneTree"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Maximales Branching
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
Branching
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mathcal{O}\left(A\log V\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="right" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset ref
LatexCommand vref
reference "Branching"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
oder 
\begin_inset Formula $\mathcal{O}\left(V^{2}\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Schrumpfen:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset ref
LatexCommand vref
reference "Branching (Schrumpfen)"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Kürzeste Wege
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
Dijkstra
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mathcal{O}\left(V^{2}\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Keine neg.
 Kanten
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="right" valignment="middle" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset ref
LatexCommand vref
reference "Dijkstra"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mathcal{O}\left(A\log V\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mathcal{O}\left(A+V\log V\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
BellmanFord
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mathcal{O}\left(VA\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset ref
LatexCommand vref
reference "BellmanFord"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
DAGShortestPath
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mathcal{O}\left(V+A\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Nur in DAGs
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset ref
LatexCommand vref
reference "DAGShortestPath"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Alle kürzesten Wege
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
FloydWarshall
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mathcal{O}\left(V^{3}\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Wege über erste k Knoten
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset ref
LatexCommand vref
reference "FloydWarshall"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Johnson
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mathcal{O}\left(V\times\text{Dijkstra}\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
1
\begin_inset Formula $\times$
\end_inset

BF, 
\begin_inset Formula $\left|V\right|\times$
\end_inset

Dijkstra
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset ref
LatexCommand vref
reference "Johnson"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Kreise mit bestem KZV
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
<kein Name>
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mathcal{O}\left(VA\log\left(CVT\right)\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mu$
\end_inset

 schätzen
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Minimales Matching
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
Ungarische Methode
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mathcal{O}\left(n^{3}\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset ref
LatexCommand vref
reference "HungarianMethod"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
AKP-Algorithmus
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mathcal{O}\left(n^{3}\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset ref
LatexCommand vref
reference "AKP"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Maximaler 
\begin_inset Formula $\left(s,t\right)$
\end_inset

-Fluss
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
FordFulkerson
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mathcal{O}\left(A\left|f^{*}\right|\right)\cancel{\boxast}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
a.W.
 im reduzierten Netzwerk
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset ref
LatexCommand vref
reference "FordFulkerson"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
EdmondsKarp
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mathcal{O}\left(VA^{2}\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
FF mit wenig Kanten auf a.W.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset ref
LatexCommand vref
reference "EdmondsKarp"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
ScalingMaxFlow
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mathcal{O}\left(A^{2}\log C\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
nur Kanten mit 
\begin_inset Formula $c_{f}>K$
\end_inset


\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="right" valignment="middle" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset ref
LatexCommand vref
reference "ScalingMaxFlow"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mathcal{O}\left(VA\log C\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Preflow-Push
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mathcal{O}\left(V^{2}A\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Push, Lift
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset ref
LatexCommand vref
reference "PrefowPush"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
(FIFO-Variante)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mathcal{O}\left(V^{3}\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
(Examine)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset ref
LatexCommand vref
reference "FIFO-PFP"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Minimaler Schnitt
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
NagamochiIbaraki
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mathcal{O}\left(V^{3}\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
legale Ordnung
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="right" valignment="middle" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset ref
LatexCommand vref
reference "NagamochiIbaraki"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mathcal{O}\left(V^{2}+VE\log V\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Karger
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
¯
\backslash
_(
\begin_inset Formula $\ddot{\smile}$
\end_inset

)_/¯
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
MC-Algo, 
\begin_inset Formula $p=\frac{2}{n\left(n-1\right)}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset ref
LatexCommand vref
reference "Karger"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="center" valignment="middle" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Netzwerkfluss
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
\size footnotesize
SteppingStone
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
¯
\backslash
_(
\begin_inset Formula $\ddot{\smile}$
\end_inset

)_/¯
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Neg.-Kreise-Verfahren
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mathcal{O}\left(V^{2}AUW\right)\cancel{\boxast}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
zul.
 Fluss wird kostenminimiert
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset ref
LatexCommand vref
reference "CycleCanceling"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
Kürz.-Wege-Verfahren
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mathcal{O}\left(BV^{2}\right)\cancel{\boxast}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
kostenmin.
 Fluss wird zulässig
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset ref
LatexCommand vref
reference "SuccShortestPath"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mathcal{O}\left(BA\log V\right)\cancel{\boxast}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
auch ohne dass 
\series bold
alle
\series default
 KW existieren
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset ref
LatexCommand vref
reference "SuccShortestPath2"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
CapacityScaling
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mathcal{O}\left(AV^{2}\log U\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
analog zu ScalingMaxFlow
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="right" valignment="middle" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset CommandInset ref
LatexCommand vref
reference "CapacityScaling"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\size footnotesize
\begin_inset Formula $\mathcal{O}\left(A^{2}\log V\log U\right)$
\end_inset


\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
\noindent
Probleme und Algorithmen
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
Lineares kombinatorisches Optimierungsproblem
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Plain Layout
Gegeben sind eine endliche Menge 
\begin_inset Formula $E$
\end_inset

, ein System von Teilmengen 
\begin_inset Formula $\mathcal{I}\subseteq2^{E}$
\end_inset

 (zulässige Lösungen) und eine Funktion 
\begin_inset Formula $c:E\rightarrow\mathbb{R}$
\end_inset

.
 Es ist eine Menge 
\begin_inset Formula $I^{\ast}\in\mathcal{I}$
\end_inset

 zu bestimmen, so dass 
\begin_inset Formula ${\displaystyle c(I^{\ast})=\sum_{e\in I^{\ast}}c(e)}$
\end_inset

 minimal bzw.
 maximal ist.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
Euklidisches Traveling-Salesman-Problem
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Plain Layout
Gegeben sind 
\begin_inset Formula $n$
\end_inset

 Punkte in der Euklidischen Ebene.
 Zu bestimmen ist eine geschlossene Tour, die jeden Punkt genau einmal besucht
 und möglichst kurz ist.
\end_layout

\begin_layout Plain Layout
\begin_inset Formula $E=$
\end_inset

 Menge der Kanten
\end_layout

\begin_layout Plain Layout
\begin_inset Formula $\mathcal{I}=$
\end_inset

 Alle Mengen von Kanten, die eine Tour bilden
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
Euklidisches Matching-Problem
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Plain Layout
Gegeben sind 
\begin_inset Formula $n$
\end_inset

 Punkte in der Euklidischen Ebene (
\begin_inset Formula $n$
\end_inset

 gerade).
 Zu bestimmen sind 
\begin_inset Formula $\frac{n}{2}$
\end_inset

 Linien, so dass jeder Punkt Endpunkt genau einer Linie ist und die Summe
 der Linienlängen so klein wie möglich ist.
\end_layout

\begin_layout Plain Layout
\begin_inset Formula $E=$
\end_inset

 Menge der Kanten
\end_layout

\begin_layout Plain Layout
\begin_inset Formula $\mathcal{I}=$
\end_inset

 Alle Mengen von Kanten mit der Eigenschaft, dass jeder Knoten zu genau
 einer der Kanten gehört.
\end_layout

\end_inset


\end_layout

\begin_layout Description
Einheitskosten-Modell Es werden nur die Schritte des Algorithmus gezählt,
 die Zahlengrößen bleiben unberücksichtigt.
\end_layout

\begin_layout Description
Bit-Modell Die Laufzeit für eine arithmetische Operation ist 
\begin_inset Formula $M$
\end_inset

, wobei 
\begin_inset Formula $M$
\end_inset

 die größte Kodierungslänge einer an dieser Operation beteiligten Zahl ist.
\end_layout

\begin_layout Definition
\noindent
Die Laufzeitfunktion 
\begin_inset Formula $f_{A}:\mathbb{N}\rightarrow\mathcal{\mathbb{N}}$
\end_inset

 ist in 
\begin_inset Formula $\mathcal{O}(g)$
\end_inset

 für eine Funktion 
\begin_inset Formula $g:\mathbb{N}\rightarrow\mathcal{\mathbb{N}}$
\end_inset

 falls es eine Konstante 
\begin_inset Formula $c>0$
\end_inset

 und 
\begin_inset Formula $n_{o}\in\mathbb{N}$
\end_inset

 gibt, so dass 
\begin_inset Formula $f_{A}\leq c\cdot g(n)$
\end_inset

 für alle 
\begin_inset Formula $n\geq n_{o}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Definition
Ein Algorithmus heißt 
\series bold
effizient
\series default
 bzw.
 
\series bold
polynomialer Algorithmus
\series default
, wenn seine Laufzeit in 
\begin_inset Formula $\mathcal{O}\left(n^{k}\right)$
\end_inset

 liegt.
\end_layout

\begin_layout Definition
Ein Problem, das mit einem polynomialen Algorithmus gelöst werden kann,
 heißt 
\series bold
polynomiales Problem
\series default
.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Definition*
Ein 
\series bold
Graph
\series default
 
\begin_inset Formula $G$
\end_inset

 ist ein Tupel 
\begin_inset Formula $G=(V,E)$
\end_inset


\begin_inset Foot
status collapsed

\begin_layout Plain Layout
In der Vorlesung werden primär endliche, einfache, schleifenfreie Graphen
 behandelt, die der Einfachheit halber eine Notation ohne Inzendenzfunktion
 nutzen können.
 In diesem Skript wird (sofern nicht anders angegeben) von solchen Graphen
 ausgegangen.
\end_layout

\end_inset

 bestehend aus einer nicht-leeren Knotenmenge 
\begin_inset Formula $V$
\end_inset

 und einer Kantenmenge 
\begin_inset Formula $E$
\end_inset

.
\end_layout

\begin_layout Itemize
\noindent
Ein Graph heißt 
\series bold
endlich
\series default
, wenn 
\begin_inset Formula $V$
\end_inset

 und 
\begin_inset Formula $E$
\end_inset

 endlich sind.
\end_layout

\begin_layout Itemize
\noindent
Wenn 
\begin_inset Formula $e=\left\{ u,v\right\} \in E$
\end_inset

 und 
\begin_inset Formula $u,v\in V$
\end_inset

, dann sind 
\begin_inset Formula $u$
\end_inset

 und 
\begin_inset Formula $v$
\end_inset

 
\series bold
Nachbarn
\series default
 bzw.
 
\series bold
adjazen
\series default
t, sind 
\series bold
Endknoten
\series default
 von 
\begin_inset Formula $e$
\end_inset

 und werden von 
\begin_inset Formula $e$
\end_inset

 
\series bold
verbunden
\series default
.
\end_layout

\begin_layout Itemize
\noindent
Eine Kante 
\begin_inset Formula $e=\{u,u\}\in E$
\end_inset

 heißt 
\series bold
Schleife
\series default
.
\end_layout

\begin_layout Itemize
\noindent
Kanten mit 
\begin_inset Formula $E\ni e=\{u,v\}=f\in E$
\end_inset

 heißen 
\series bold
parallel
\series default
 oder 
\series bold
mehrfach
\series default
.
\end_layout

\begin_layout Itemize
\noindent
Ein Graph ohne Mehrfachkanten heißt 
\series bold
einfach
\series default
.
\end_layout

\begin_layout Itemize
\noindent
Für 
\begin_inset Formula $W\subseteq V$
\end_inset

 bekommt die Menge aller Knoten in 
\begin_inset Formula $V\setminus W$
\end_inset

 mit Nachbarn in 
\begin_inset Formula $W$
\end_inset

 die Bezeichnung 
\begin_inset Formula $\Gamma(W)$
\end_inset

.
\end_layout

\begin_layout Itemize
\noindent
Kurzform von 
\begin_inset Formula $\Gamma\left(\left\{ v\right\} \right)$
\end_inset

 ist 
\begin_inset Formula $\Gamma\left(v\right)$
\end_inset

.
\end_layout

\begin_layout Itemize
\noindent
Die Menge 
\begin_inset Formula $\delta\left(W\right)$
\end_inset

 aller Kanten mit je einem Endknoten in 
\begin_inset Formula $W$
\end_inset

 und 
\begin_inset Formula $V\setminus W$
\end_inset

 heißt 
\series bold
Schnitt
\series default
.
\end_layout

\begin_layout Itemize
\noindent
Kurzform von 
\begin_inset Formula $\delta\left(\left\{ v\right\} \right)$
\end_inset

 ist 
\begin_inset Formula $\delta\left(v\right)$
\end_inset

.
\end_layout

\begin_layout Itemize
\noindent
Der 
\series bold
Grad
\series default
 eines Knoten 
\begin_inset Formula $v$
\end_inset

 ist die Anzahl seiner Nachbarn, bzw.
 
\begin_inset Formula $\left|\delta\left(v\right)\right|$
\end_inset

.
\end_layout

\begin_layout Itemize
\noindent
Ein 
\series bold
(s,t)-Schnitt
\series default
 ist ein Schnitt 
\begin_inset Formula $\delta\left(V\right)$
\end_inset

 mit 
\begin_inset Formula $s\in W$
\end_inset

 und 
\begin_inset Formula $t\in V\setminus W$
\end_inset

 und gleichzeitig ein (t,s)-Schnitt.
\end_layout

\begin_layout Itemize
\noindent
Mit 
\begin_inset Formula $W\subseteq V$
\end_inset

 ist 
\begin_inset Formula $E\left(W\right)$
\end_inset

 die Menge aller Kanten mit beiden Endknoten in 
\begin_inset Formula $W$
\end_inset

.
\end_layout

\begin_layout Itemize
\noindent
Mit 
\begin_inset Formula $F\subseteq E$
\end_inset

 ist 
\begin_inset Formula $V\left(F\right)$
\end_inset

 die Menge aller Knoten, die Endknoten von mind.
 einer Kante in 
\begin_inset Formula $F$
\end_inset

 sind.
\end_layout

\begin_layout Itemize
\noindent
Sind 
\begin_inset Formula $G=\left(V,E\right)$
\end_inset

 und 
\begin_inset Formula $H=\left(W,F\right)$
\end_inset

 Graphen und 
\begin_inset Formula $W\subseteq V$
\end_inset

 und 
\begin_inset Formula $F\subseteq E$
\end_inset

, so heißt H 
\series bold
Untergraph
\series default
 von G.
\end_layout

\begin_layout Itemize
\noindent
Mit 
\begin_inset Formula $W\subseteq V$
\end_inset

 ist 
\begin_inset Formula $G-W$
\end_inset

 der Graph 
\begin_inset Formula $G$
\end_inset

 ohne die Knoten in 
\begin_inset Formula $W$
\end_inset

 und ohne alle Kanten an 
\begin_inset Formula $W$
\end_inset

.
\end_layout

\begin_layout Itemize
\noindent
\begin_inset Formula $G\left[W\right]=G-\left(V\setminus W\right)$
\end_inset

 ist der 
\series bold
von 
\begin_inset Formula $W$
\end_inset

 induzierte Untergraph
\series default
.
\end_layout

\begin_layout Itemize
\noindent
Mit 
\begin_inset Formula $F\subseteq E$
\end_inset

 ist 
\begin_inset Formula $G-F=\left(V,E\setminus F\right)$
\end_inset

.
\end_layout

\begin_layout Itemize
\noindent
Kurzform von 
\begin_inset Formula $G-\left\{ x\right\} $
\end_inset

 ist 
\begin_inset Formula $G-x$
\end_inset

 für 
\begin_inset Formula $x\in E$
\end_inset

 oder 
\begin_inset Formula $x\in V$
\end_inset

.
\end_layout

\begin_layout Itemize
\noindent
Ein einfacher Graph heißt 
\series bold
vollständig
\series default
, wenn jede mögliche Kante zwischen seinen Knoten existiert.
\end_layout

\begin_layout Itemize
\noindent
Der vollstängige Graph mit 
\begin_inset Formula $n$
\end_inset

 Knoten wird mit 
\begin_inset Formula $K_{n}=\left(V_{n},E_{n}\right)$
\end_inset

 bezeichnet.
\end_layout

\begin_layout Itemize
\noindent
Das 
\series bold
Komplement
\series default
 des Graphen 
\begin_inset Formula $G=\left(V,E\right)$
\end_inset

 ist 
\begin_inset Formula $\bar{G}=(V,E_{n}\setminus E)$
\end_inset

.
\end_layout

\begin_layout Itemize
\noindent
Ein Graph heißt 
\series bold
bipartit
\series default
, wenn er sich in zwei disjunkte Teilmengen 
\begin_inset Formula $V_{1},V_{2}$
\end_inset

 mit 
\begin_inset Formula $V_{1}\cup V_{2}=V$
\end_inset

 teilen lässt, ohne dass es Kanten 
\begin_inset Formula $\left\{ u,v\right\} $
\end_inset

 mit 
\begin_inset Formula $u,v\in V_{1}\vee u,v\in V_{2}$
\end_inset

 gibt.
\end_layout

\begin_layout Definition*
Ein 
\series bold
Digraph
\series default
 
\begin_inset Formula $G$
\end_inset

 ist ein Tupel 
\begin_inset Formula $D=(V,A)$
\end_inset

 bestehend aus einer nicht-leeren Knotenmenge 
\begin_inset Formula $V$
\end_inset

 und einer Kantenmenge 
\begin_inset Formula $A$
\end_inset

.
\end_layout

\begin_layout Itemize
\noindent
Wenn 
\begin_inset Formula $a=\left(u,v\right)\in A$
\end_inset

 und 
\begin_inset Formula $u,v\in V$
\end_inset

, dann ist 
\begin_inset Formula $u$
\end_inset

 
\series bold
Anfangsknoten
\series default
 und 
\begin_inset Formula $v$
\end_inset

 
\series bold
Endknoten 
\series default
von 
\begin_inset Formula $a$
\end_inset

.
 Hier heißt 
\begin_inset Formula $u$
\end_inset

 
\series bold
Vorgänger
\series default
 von 
\begin_inset Formula $v$
\end_inset

 und 
\begin_inset Formula $v$
\end_inset

 
\series bold
Nachfolger
\series default
 von 
\begin_inset Formula $u$
\end_inset

.
\end_layout

\begin_layout Itemize
Die Kanten 
\begin_inset Formula $\left(u,v\right)$
\end_inset

 und 
\begin_inset Formula $\left(v,u\right)$
\end_inset

 heißen 
\series bold
antiparallel
\series default
.
\end_layout

\begin_layout Itemize
\noindent
Mit 
\begin_inset Formula $W\subseteq V$
\end_inset

 ist 
\begin_inset Formula $A\left(W\right)$
\end_inset

 die Menge aller Kanten mit Anfangs- und Endknoten in 
\begin_inset Formula $W$
\end_inset

.
\end_layout

\begin_layout Itemize
\noindent
Mit 
\begin_inset Formula $B\subseteq A$
\end_inset

 ist 
\begin_inset Formula $V\left(A\right)$
\end_inset

 die Menge aller Knoten, die Anfangs- oder Endknoten von mind.
 einer Kante in 
\begin_inset Formula $B$
\end_inset

 sind.
\end_layout

\begin_layout Itemize
\begin_inset Formula $G=\left(V,E\right)$
\end_inset

 ist der unterliegende Graph von 
\begin_inset Formula $D=\left(V,A\right)$
\end_inset

, wenn 
\begin_inset Formula $E$
\end_inset

 genau die Kanten 
\begin_inset Formula $\left\{ u,v\right\} $
\end_inset

 enthält, für die 
\begin_inset Formula $\left(u,v\right)$
\end_inset

 oder 
\begin_inset Formula $\left(v,u\right)$
\end_inset

 in 
\begin_inset Formula $A$
\end_inset

 liegen.
\end_layout

\begin_layout Itemize
\noindent
Ein einfacher Digraph heißt 
\series bold
vollständig
\series default
, wenn jede mögliche Kante (in beide Richtungen) zwischen seinen Knoten
 existiert.
\end_layout

\begin_layout Itemize
\noindent
Der vollstängige Digraph mit 
\begin_inset Formula $n$
\end_inset

 Knoten wird mit 
\begin_inset Formula $D_{n}=\left(V_{n},A_{n}\right)$
\end_inset

 bezeichnet.
\end_layout

\begin_layout Itemize
Für 
\begin_inset Formula $W\subseteq V,W\neq V\neq\emptyset$
\end_inset

 enthält 
\begin_inset Formula $\delta^{+}\left(W\right)=\left\{ \left(i,j\right)\in A\,\vert\,i\in W,j\notin W\right\} $
\end_inset

 alle Kanten, die 
\begin_inset Formula $W$
\end_inset

 verlassen, 
\begin_inset Formula $\delta^{-}\left(W\right)=\delta^{+}\left(V\setminus W\right)$
\end_inset

 alle Kanten, die in 
\begin_inset Formula $W$
\end_inset

 hinein führen und 
\begin_inset Formula $\delta\left(W\right)=\delta^{+}\left(W\right)\cup\delta^{-}\left(W\right)$
\end_inset

 beide.
 Diese Mengen heißen 
\series bold
Schnitt
\series default
.
 Es gelten die Kurzformen für einzelne Knoten.
\end_layout

\begin_layout Itemize
Für 
\begin_inset Formula $s\in W$
\end_inset

 und 
\begin_inset Formula $t\notin W$
\end_inset

 heißt 
\begin_inset Formula $\delta^{+}\left(W\right)$
\end_inset

 auch 
\series bold

\begin_inset Formula $\left(s,t\right)$
\end_inset

-Schnitt
\series default
.
\end_layout

\begin_layout Itemize
Die Kardinalitäten der Schnitte heißen 
\series bold
Außengrad
\series default
 
\begin_inset Formula $\left(\left|\delta^{+}\left(v\right)\right|\right)$
\end_inset

, 
\series bold
Innengrad
\series default
 
\begin_inset Formula $\left(\left|\delta^{-}\left(v\right)\right|\right)$
\end_inset

 und 
\series bold
Grad
\series default
 
\begin_inset Formula $\left(\left|\delta\left(v\right)\right|\right)$
\end_inset

.
\end_layout

\begin_layout Itemize
\begin_inset Formula $\delta^{+}\left(W\right)$
\end_inset

 heißt 
\series bold
gerichteter Schnitt
\series default
, wenn 
\begin_inset Formula $\delta^{-}\left(W\right)=\emptyset$
\end_inset

.
\end_layout

\begin_layout Definition*
Eine endliche Folge 
\begin_inset Formula $W=\left(v_{0},e_{1},v_{1},e_{2},v_{2},\ldots,e_{k},v_{k}\right)$
\end_inset

 heißt 
\series bold
Kette
\series default
 oder 
\begin_inset Formula $\left[v_{0},v_{k}\right]$
\end_inset

-Kette der Länge 
\begin_inset Formula $k$
\end_inset

, wenn jede Kante 
\begin_inset Formula $e_{i}$
\end_inset

 die Knoten 
\begin_inset Formula $v_{i-1}$
\end_inset

 und 
\begin_inset Formula $v_{i}$
\end_inset

 in einem (Di-)Graphen indiziert und 
\series bold
gerichtete Kette
\series default
 oder 
\begin_inset Formula $\left(v_{0},v_{k}\right)$
\end_inset

-Kette, wenn alle Kanten in der Form 
\begin_inset Formula $e_{i}=\left(v_{i-1},v_{i}\right)$
\end_inset

 sind.
 
\begin_inset Formula $v_{0}$
\end_inset

 und 
\begin_inset Formula $v_{k}$
\end_inset

 heißen 
\series bold
Anfangs- und Endknoten
\series default
.
\end_layout

\begin_layout Itemize
Gibt es in einem (Di-)Graphen keine parallelen Kanten, ist eine (gerichtete)
 Kette durch ihre Knoten eindeutig identifiziert.
\end_layout

\begin_layout Itemize
Ein 
\series bold
(gerichteter) Weg
\series default
 oder 
\series bold
(gerichteter) Pfad
\series default
 ist eine (gerichtete) Kette, in der alle Knoten verschieden sind.
\end_layout

\begin_layout Itemize
Die Notation 
\begin_inset Formula $u\underset{D}{\rightarrow}v$
\end_inset

 bedeutet, dass es einen 
\begin_inset Formula $\left(u,v\right)$
\end_inset

-Weg in D gibt.
\end_layout

\begin_layout Itemize
Man spricht auch von 
\begin_inset Formula $\left(u,v\right)$
\end_inset

-Wegen bzw.
 
\begin_inset Formula $\left(u,v\right)$
\end_inset

-Pfaden.
\end_layout

\begin_layout Itemize
Die Knoten 
\begin_inset Formula $s$
\end_inset

 und 
\begin_inset Formula $t$
\end_inset

 eines Graphen heißen 
\series bold
zusammenhängend
\series default
, wenn ein 
\begin_inset Formula $\left(s,t\right)$
\end_inset

-Weg existiert.
\end_layout

\begin_layout Itemize
Ein 
\series bold
zusammenhängender Graph
\series default
 enthält nur Knoten, die paarweise zusammenhängend sind.
\end_layout

\begin_layout Itemize
Ein Digraph heißt 
\series bold
stark zusammenhängend
\series default
, wenn es zu jedem Knotenpaar 
\begin_inset Formula $s,t$
\end_inset

 einen 
\begin_inset Formula $\left(s,t\right)$
\end_inset

-Weg und einen 
\begin_inset Formula $\left(t,s\right)$
\end_inset

-Weg gibt.
\end_layout

\begin_layout Itemize

\series bold
Kompontenten
\series default
 eines Graphen sind die (bezüglich Kanteninklusion) maximalen zusammenhängenden
 Untergraphen.
\end_layout

\begin_layout Itemize

\series bold
Starke Kompontenten
\series default
 eines Diraphen sind die (bezüglich Kanteninklusion) maximalen stark zusammenhän
genden Unterdigraphen.
\end_layout

\begin_layout Itemize
Ein Graph heißt 
\series bold

\begin_inset Formula $k$
\end_inset

-fach zusammenhängend
\series default
, wenn jedes Paar Knoten 
\begin_inset Formula $s,t$
\end_inset

 durch mindestens 
\begin_inset Formula $k$
\end_inset

 
\begin_inset Formula $\left(s,t\right)$
\end_inset

-Wege verbunden ist, die keine inneren Knoten gemeinsam haben.
\end_layout

\begin_layout Itemize
Ein Digraph heißt 
\series bold

\begin_inset Formula $k$
\end_inset

-fach stark zusammenhängend
\series default
, wenn jedes Paar Knoten 
\begin_inset Formula $s,t$
\end_inset

 durch mindestens 
\begin_inset Formula $k$
\end_inset

 
\begin_inset Formula $\left(s,t\right)$
\end_inset

-Wege und 
\begin_inset Formula $\left(t,s\right)$
\end_inset

-Wege verbunden ist, die keine inneren Knoten gemeinsam haben.
\end_layout

\begin_layout Itemize
Eine 
\series bold
geschlossene Kette
\series default
 hat mehr als 
\begin_inset Formula $0$
\end_inset

 Kanten und den gleichen Anfangs- und Endknoten.
\end_layout

\begin_layout Itemize
Ein 
\series bold
Kreis
\series default
 ist eine geschlossene Kette mit paarweise verschiedenen inneren Knoten.
 Seine 
\series bold
Länge
\series default
 ist die Anzahl seiner Kanten.
\end_layout

\begin_layout Itemize
Ein 
\series bold
Eulerpfad
\series default
 ist eine Kette, die jede Kante eines (Di-)Graphen einmal enthält.
\end_layout

\begin_layout Itemize
Eine 
\series bold
Eulertour
\series default
 ist ein geschlossener Eulerpfad.
\end_layout

\begin_layout Itemize
Ein 
\series bold
Eulergraph
\series default
 ist ein Graph, der eine Eulertour enthält.
\end_layout

\begin_layout Itemize
Ein 
\series bold
Hamiltonkreis
\series default
 (oder 
\series bold
Hamiltontour
\series default
) ist ein Kreis der Länge 
\begin_inset Formula $\left|V\right|$
\end_inset

.
\end_layout

\begin_layout Itemize
Ein 
\series bold
hamiltonischer
\series default
 Graph enthält einen Hamiltonkreis.
\end_layout

\begin_layout Itemize
Ein 
\series bold
Hamiltonweg
\series default
 ist ein (gerichteter) Weg der Länge 
\begin_inset Formula $\left|V\right|-1$
\end_inset

.
\end_layout

\begin_layout Itemize
Ein 
\series bold
Wald
\series default
 ist eine Kantenmenge in einem Graphen, die keinen Kreis enthält.
\end_layout

\begin_layout Itemize
Ein 
\series bold
Baum
\series default
 ist ein zusammenhängender Wald.
\end_layout

\begin_layout Itemize
Ein 
\series bold
aufspannender
\series default
 Baum enthält alle Knoten des Graphen.
\end_layout

\begin_layout Itemize
Ein 
\series bold
azyklischer
\series default
 Digraph enthält keine gerichteten Kreise.
\end_layout

\begin_layout Itemize
Ein 
\series bold
Branching
\series default
 in einem Digraphen ist eine azyklische Kantenmenge, sodass jeder Knoten
 maximal eine Eingangskante besitzt.
\end_layout

\begin_layout Itemize
Eine 
\series bold
Arboreszenz
\series default
 ist ein zusammenhängendes Branching.
\end_layout

\begin_layout Itemize
Eine 
\series bold
aufspannende Arboreszenz
\series default
 enthält alle Knoten ihres Digraphen.
\end_layout

\begin_layout Itemize

\series bold
Gewichte
\series default
 (auch 
\begin_inset Quotes eld
\end_inset

Kosten
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Distanzen
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Kapazitäten
\begin_inset Quotes erd
\end_inset

, usw.) werden durch Funktionen der Form 
\begin_inset Formula $c:E\rightarrow\mathbb{R}$
\end_inset

 bzw.
 
\begin_inset Formula $c:A\rightarrow\mathbb{R}$
\end_inset

 mit Kanten assoziiert.
\end_layout

\begin_layout Section
Grundlegende Graphenalgorithmen
\end_layout

\begin_layout Subsection
Repräsentationen von Graphen
\end_layout

\begin_layout Description
Adjazenzliste Jeder Knoten hat eine Liste seiner Nachbarn gespeichert.
 Speichersparend für dünne Graphen.
 Hinzufügen und Entfernen von Knoten und Kanten sehr einfach.
 Existenz von Kanten prüfen teuer (einen Knoten durchlaufen).
 Speicheraufwand: 
\begin_inset Formula $\mathfrak{\mathcal{O}}(V+E)$
\end_inset


\end_layout

\begin_layout Description
Adjazenzmatrix 
\begin_inset Formula $\left|V\right|\times\left|V\right|$
\end_inset

-Matrix, die an der Stelle 
\begin_inset Formula $(u,v)$
\end_inset

 eine 
\begin_inset Formula $1$
\end_inset

 hat, wenn die Kante 
\begin_inset Formula $\left(u,v\right)$
\end_inset

 bzw.
 
\begin_inset Formula $\left\{ u,v\right\} $
\end_inset

 existiert.
 Existenz von Kanten prüfen in 
\begin_inset Formula $\mathcal{O}(1)$
\end_inset

.
 Nachbarn durchlaufen unanhängig von ihrer Anzahl in 
\begin_inset Formula $\mathcal{O}(V)$
\end_inset

.
 Speicheraufwand: 
\begin_inset Formula $\mathcal{O}\left(V^{2}\right)$
\end_inset


\end_layout

\begin_layout Description
Inzidenzmatrix 
\begin_inset Formula $\left|V\right|\times\left|E\right|$
\end_inset

-Matrix, die an der Stelle 
\begin_inset Formula $(v,e)$
\end_inset

 eine 
\begin_inset Formula $1$
\end_inset

 hat, wenn der Knoten 
\begin_inset Formula $v$
\end_inset

 Endknoten der Kante 
\begin_inset Formula $e$
\end_inset

 ist.
 Erlaubt Untersuchung des Graphen mit diversen, algebraischen Methoden.
 
\emph on
[Kein Beispiel]
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="middle" width="30text%">
<column alignment="center" valignment="middle" width="30text%">
<column alignment="center" valignment="middle" width="30text%">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename diagramme/adjazenz.svg
	lyxscale 20
	scale 15

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\begin{bmatrix}1 & \rightarrow2 & \rightarrow5\\
2 & \rightarrow1 & \rightarrow3 & \rightarrow4 & \rightarrow5\\
3 & \rightarrow2 & \rightarrow4\\
4 & \rightarrow2 & \rightarrow3 & \rightarrow5\\
5 & \rightarrow1 & \rightarrow2 & \rightarrow4
\end{bmatrix}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left[\begin{array}{c|ccccc}
 & 1 & 2 & 3 & 4 & 5\\
\hline 1 & 0 & 1 & 0 & 0 & 1\\
2 & 1 & 0 & 1 & 1 & 1\\
3 & 0 & 1 & 0 & 1 & 0\\
4 & 0 & 1 & 1 & 0 & 1\\
5 & 1 & 1 & 0 & 1 & 0
\end{array}\right]$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename diagramme/adjazenz_dir.svg
	lyxscale 20
	scale 15

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\begin{bmatrix}1 & \rightarrow2 & \rightarrow5\\
2 & \rightarrow4\\
3 & \rightarrow4\\
4\\
5 & \rightarrow2 & \rightarrow4
\end{bmatrix}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\left[\begin{array}{c|ccccc}
\nearrow & 1 & 2 & 3 & 4 & 5\\
\hline 1 & 0 & 1 & 0 & 0 & 1\\
2 & 0 & 0 & 0 & 1 & 0\\
3 & 0 & 0 & 0 & 1 & 0\\
4 & 0 & 0 & 0 & 0 & 0\\
5 & 0 & 1 & 0 & 1 & 0
\end{array}\right]$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Durchsuchen von Graphen
\end_layout

\begin_layout Standard
Das 
\begin_inset Quotes eld
\end_inset

färben
\begin_inset Quotes erd
\end_inset

 von Knoten ist eine Kurzschreibweise für folgende Sachverhalte:
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
weiß Der Knoten ist noch nicht erreicht.
 (Im Normalfall Grundzustand)
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
grau Der Knoten wurde erreicht, seine Nachbarn jedoch noch nicht abgearbeitet.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
schwarz Der Knoten wurde komplett bearbeitet.
\end_layout

\begin_layout Subsubsection
Breitensuche (BFS)
\end_layout

\begin_layout Standard
Start bei Knoten 
\begin_inset Formula $s$
\end_inset

.
 
\begin_inset Formula $\pi\left[u\right]=v$
\end_inset

 heißt 
\begin_inset Formula $v$
\end_inset

 ist direkter Vorgänger von 
\begin_inset Formula $u$
\end_inset

.
 
\begin_inset Formula $Q$
\end_inset

 ist eine Queue.
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "BFS"

\end_inset


\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
BFS
\series default

\begin_inset Formula $\left(G,s\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Färbe 
\begin_inset Formula $s$
\end_inset

 grau, setze 
\begin_inset Formula $d\left[s\right]=0$
\end_inset

, 
\begin_inset Formula $\pi\left[s\right]=\textrm{\bot}$
\end_inset

 und initialisiere 
\begin_inset Formula $Q$
\end_inset

 mit 
\begin_inset Formula $s$
\end_inset

.
\end_layout

\begin_layout Enumerate
Färbe alle Knoten 
\begin_inset Formula $v\in V\setminus\left\{ s\right\} $
\end_inset

 weiß und setze 
\begin_inset Formula $d\left[v\right]=+\infty$
\end_inset

 und 
\begin_inset Formula $\pi\left[v\right]=\bot$
\end_inset

.
\end_layout

\begin_layout Enumerate
Falls 
\begin_inset Formula $Q$
\end_inset

 leer, 
\emph on
Stop
\emph default
(
\begin_inset Quotes eld
\end_inset

BFS beendet
\begin_inset Quotes erd
\end_inset

), sonst sei 
\begin_inset Formula $u$
\end_inset

 erster Knoten in 
\begin_inset Formula $Q$
\end_inset

.
\end_layout

\begin_layout Enumerate
Für alle 
\begin_inset Formula $v$
\end_inset

 aus Adjazenzliste von 
\begin_inset Formula $u$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Enumerate
Falls 
\begin_inset Formula $v$
\end_inset

 weiß ist, färbe 
\begin_inset Formula $v$
\end_inset

 grau, setze 
\begin_inset Formula $d\left[v\right]=d\left[u\right]+1$
\end_inset

, 
\begin_inset Formula $\pi\left[v\right]=u$
\end_inset

 und füge 
\begin_inset Formula $v$
\end_inset

 ans Ende von 
\begin_inset Formula $Q$
\end_inset

 ein.
\end_layout

\end_deeper
\begin_layout Enumerate
Entferne 
\begin_inset Formula $u$
\end_inset

 aus 
\begin_inset Formula $Q$
\end_inset

, färbe 
\begin_inset Formula $u$
\end_inset

 schwarz und gehe zu 
\begin_inset Formula $\left(3\right)$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Laufzeit: linear in Bezug auf Adjazenzstruktur.
 Das heißt 
\begin_inset Formula $\mathcal{O}\left(V+E\right)$
\end_inset

 bei Adjazenzlisten und 
\begin_inset Formula $\mathcal{O}\left(V^{2}\right)$
\end_inset

 bei Adjazenzmatrizen.
\end_layout

\begin_layout Definition*
Für 
\begin_inset Formula $v\in V$
\end_inset

 sei 
\begin_inset Formula $\delta\left(s,u\right)$
\end_inset

 die Zahl der Kanten des kürzesten 
\begin_inset Formula $\left(s,u\right)$
\end_inset

-Weges, bzw.
 
\begin_inset Formula $\infty$
\end_inset

 wenn kein solcher existiert.
\end_layout

\begin_layout Lemma
Sei 
\begin_inset Formula $G=\left(V,E\right)$
\end_inset

 ein Graph und 
\begin_inset Formula $s\in V$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Itemize
Für jede Kante 
\begin_inset Formula $uv\in E$
\end_inset

 gilt: 
\begin_inset Formula $\delta\left(s,v\right)\leq\delta\left(s,u\right)+1$
\end_inset

.
\end_layout

\begin_layout Itemize
Nach Terminierung von BFS
\begin_inset Formula $\left(G,s\right)$
\end_inset

 gilt: 
\begin_inset Formula $\forall v\in V:d\left[v\right]\geq\delta\left(s,v\right)$
\end_inset


\end_layout

\begin_layout Itemize
Enthält 
\begin_inset Formula $Q$
\end_inset

 während BFS
\begin_inset Formula $\left(G,s\right)$
\end_inset

 
\begin_inset Formula $v_{1},v_{2},\ldots,v_{r}$
\end_inset

 gilt: 
\begin_inset Formula $d\left[v_{r}\right]\leq d\left[v_{1}\right]+1$
\end_inset

 und 
\begin_inset Formula $d\left[v_{i}\right]\leq d\left[v_{i+1}\right],1\leq i<r$
\end_inset


\end_layout

\end_deeper
\begin_layout Proposition
Sei 
\begin_inset Formula $G=\left(V,E\right)$
\end_inset

, 
\begin_inset Formula $s\in V$
\end_inset

 und BFS
\begin_inset Formula $\left(G,s\right)$
\end_inset

 ausgeführt.
 Dann ist jeder Knoten, der von 
\begin_inset Formula $s$
\end_inset

 aus erreichbar ist, schwarz gefärbt und es gilt 
\begin_inset Formula $d\left[v\right]=\delta\left(s,v\right)$
\end_inset

.
\end_layout

\begin_layout Subsubsection
Tiefensuche (DFS)
\end_layout

\begin_layout Standard
Kein spezieller Startknoten.
 Die Zeit der Grau-Färbung wird in 
\begin_inset Formula $d\left[v\right]$
\end_inset

 gespeichtert, die Zeit der Schwarz-Färbung (Terminierungszeit) in 
\begin_inset Formula $t\left[v\right].$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "DFS"

\end_inset


\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
DFS
\series default

\begin_inset Formula $\left(D\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Färbe alle Knoten 
\begin_inset Formula $u\in V$
\end_inset

 weiß und setze 
\begin_inset Formula $\pi\left[u\right]=\bot$
\end_inset

.
\end_layout

\begin_layout Enumerate
Setze globale Zeit 
\begin_inset Formula $t=0$
\end_inset

.
\end_layout

\begin_layout Enumerate
Für jeden Knoten 
\begin_inset Formula $u\in V$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Enumerate
Falls 
\begin_inset Formula $u$
\end_inset

 weiß gefärbt ist, dann DFSVisit
\begin_inset Formula $\left(u\right)$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Plain Layout
\begin_inset CommandInset line
LatexCommand rule
offset "1ex"
width "100col%"
height "1pt"

\end_inset


\end_layout

\begin_layout Plain Layout

\series bold
DFSVisit
\series default

\begin_inset Formula $\left(u\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Färbe 
\begin_inset Formula $u$
\end_inset

 grau, setze 
\begin_inset Formula $t=t+1$
\end_inset

 und 
\begin_inset Formula $d[u]=t.$
\end_inset


\end_layout

\begin_layout Enumerate
Für alle 
\begin_inset Formula $v$
\end_inset

 aus Adjazenzliste von 
\begin_inset Formula $u$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Enumerate
Falls 
\begin_inset Formula $v$
\end_inset

 weiß ist, dann setze 
\begin_inset Formula $\pi\left[v\right]=u$
\end_inset

 und vollziehe DFSVisit
\begin_inset Formula $\left(v\right)$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Enumerate
Färbe 
\begin_inset Formula $u$
\end_inset

 schwarz, setze 
\begin_inset Formula $t=t+1$
\end_inset

 und 
\begin_inset Formula $f\left[u\right]=t$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Laufzeit: linear in Bezug auf Adjazenzstruktur.
 Das heißt 
\begin_inset Formula $\mathcal{O}\left(V+A\right)$
\end_inset

 bei Adjazenzlisten und 
\begin_inset Formula $\mathcal{O}\left(V^{2}\right)$
\end_inset

 bei Adjazenzmatrizen.
\end_layout

\begin_layout Definition*
Der 
\series bold
DFS-Wald
\series default
 des (Di-)Graphen 
\begin_inset Formula $G=\left(V,E\right)$
\end_inset

 ist ein Digraph der Form 
\begin_inset Formula $\left(V,\left\{ \left\{ \pi\left[v\right],v\right\} |v\in V,\pi\left[v\right]\neq\bot\right\} \right)$
\end_inset

.
 Er symbolisiert also den Weg durch den Graphen während einer DFS.
\end_layout

\begin_layout Definition*
Alle Kanten 
\begin_inset Formula $\left\{ u,v\right\} $
\end_inset

 aus 
\begin_inset Formula $E$
\end_inset

, die nicht zum Wald gehören sind:
\end_layout

\begin_deeper
\begin_layout Description
Vorwärtskanten Es gibt einen 
\begin_inset Formula $\left(u,v\right)$
\end_inset

-Weg im DFS-Wald
\end_layout

\begin_layout Description
Rückwärtskanten Es gibt einen 
\begin_inset Formula $(v,u)$
\end_inset

-Weg im DFS-Wald
\end_layout

\begin_layout Description
Kreuzungskanten Es gibt keinen der Wege im DFS-Wald
\end_layout

\end_deeper
\begin_layout Definition*
Für ungerichtete Graphen gibt es nur Rückwärtskanten.
\end_layout

\begin_layout Proposition
Ein Knoten 
\begin_inset Formula $v$
\end_inset

 ist Nachfolger eines Knotens 
\begin_inset Formula $u$
\end_inset

 im DFS-Wald genau dann, wenn gilt: Zu dem Zeitpunkt, zu dem 
\begin_inset Formula $u$
\end_inset

 grau gefärbt wird, ist 
\begin_inset Formula $v$
\end_inset

 von 
\begin_inset Formula $u$
\end_inset

 aus auf einem Weg erreichbar, der nur aus weißen Knoten besteht.
\end_layout

\begin_layout Subsection
Topologisches Sortieren
\end_layout

\begin_layout Standard
Die topologische Sortierung eines Digraphen ist eine Knotenreihenfolge,
 in der alle Kanten nur zu später auftretenden Knoten führen.
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "TopSort"

\end_inset


\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
Topsort
\series default

\begin_inset Formula $\left(D\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Initialisiere leere Liste 
\begin_inset Formula $L=\emptyset$
\end_inset

.
\end_layout

\begin_layout Enumerate
Führe DFS
\begin_inset Formula $\left(D\right)$
\end_inset

 aus, mit Zusatz: Wenn ein Knoten 
\begin_inset Formula $v$
\end_inset

 schwarz gefärbt wird, füge ihn am Anfang der Liste 
\begin_inset Formula $L$
\end_inset

 ein.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $L$
\end_inset

 liefert topologische Sortierung.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Laufzeit: siehe DFS
\begin_inset Formula $\left(D\right)$
\end_inset


\end_layout

\begin_layout Lemma
Ein Digraph 
\begin_inset Formula $D$
\end_inset

 ist genau dann kreisfrei, wenn DFS
\begin_inset Formula $\left(D\right)$
\end_inset

 keine Ruckwärtskanten liefert.
\end_layout

\begin_layout Proposition
Ein azyklischer Digraph 
\begin_inset Formula $D$
\end_inset

 wird durch Topsort
\begin_inset Formula $\left(D\right)$
\end_inset

 topologisch sortiert.
\end_layout

\begin_layout Subsection
Starke Zusammenhangskomponenten
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "StrongComponents"

\end_inset


\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
StrongComponents
\series default

\begin_inset Formula $\left(D\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Führe DFS
\begin_inset Formula $\left(D\right)$
\end_inset

 aus, merke Terminierungszeiten 
\begin_inset Formula $f\left[u\right]$
\end_inset

 für alle 
\begin_inset Formula $u\in V$
\end_inset

.
\end_layout

\begin_layout Enumerate
Generiere 
\begin_inset Formula $D^{\top}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Führe DFS
\begin_inset Formula $\left(D^{\top}\right)$
\end_inset

 aus, wobei im Schritt 
\begin_inset Formula $\left(3\right)$
\end_inset

 die Knoten nach absteigenden Werten von 
\begin_inset Formula $f\left[u\right]$
\end_inset

 sortiert werden.
\end_layout

\begin_layout Enumerate
Die Knoten jedes Baumes im DFS-Wald von 
\begin_inset Formula $D^{\top}$
\end_inset

 bestimmen eine starke Zusammenhangskomponente.
\end_layout

\end_inset


\end_layout

\begin_layout Lemma
Jeder Weg, der zwei Knoten aus derselben Komponente verbindet, enthält nur
 Knoten aus dieser Komponente.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Lemma
Alle Knoten einer Komponente sind im gleichen DFS-Baum enthalten.
\end_layout

\begin_layout Definition*
Für einen Knoten 
\begin_inset Formula $u$
\end_inset

 bezeichne 
\begin_inset Formula $\phi(u)$
\end_inset

 den Knoten 
\begin_inset Formula $v$
\end_inset

 mit der größten Terminierungszeit bei DFS
\begin_inset Formula $\left(D\right)$
\end_inset

, der von 
\begin_inset Formula $u$
\end_inset

 aus in 
\begin_inset Formula $D$
\end_inset

 erreichbar ist, das heißt:
\end_layout

\begin_layout Definition*
\begin_inset Formula $\phi\left(u\right)=\mathrm{argmax}{}_{v}\left\{ f\left[v\right]|u\underset{D}{\rightarrow}v\right\} $
\end_inset


\end_layout

\begin_layout Proposition
Für 
\begin_inset Formula $D=\left(V,A\right)$
\end_inset

 sei DFS
\begin_inset Formula $\left(D\right)$
\end_inset

 ausgeführt.
 Dann ist für jeden Knoten 
\begin_inset Formula $\phi\left(u\right)$
\end_inset

 Vorgänger von 
\begin_inset Formula $u$
\end_inset

 im DFS-Wald.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Proposition
Nach DFS
\begin_inset Formula $\left(D\right)$
\end_inset

 liegen zwei Knoten 
\begin_inset Formula $u$
\end_inset

 und 
\begin_inset Formula $v$
\end_inset

 genau dann in der gleichen Komponente, wenn 
\begin_inset Formula $\phi\left(u\right)=\phi\left(v\right)$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Proposition
Der Algorithmus StrongComponents identifiziert die starken Zusammenhangskomponen
ten eines Digraphen.
\end_layout

\begin_layout Section
Optimale Bäume und Branchings
\end_layout

\begin_layout Subsection
Minimale aufspannende Bäume
\end_layout

\begin_layout Standard
Die Probleme, einen minimalen, aufspannenden Baum oder einen maximalen,
 aufspannenden Wald zu finden lassen sich einfach ineinander transformieren.
 Darum beschränken wir uns auf ersteres.
\end_layout

\begin_layout Standard
\noindent
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
Minimaler-aufspannender-Baum-Problem
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Plain Layout
Gegeben ist ein Graph 
\begin_inset Formula $G=\left(V,E\right)$
\end_inset

 mit Kantengewichten 
\begin_inset Formula $c_{e}$
\end_inset

 für 
\begin_inset Formula $e\in E$
\end_inset

.
 Zu bestimmen ist ein aufspannender Baum für G, dessen Gesamtgewicht möglichst
 klein ist.
\end_layout

\begin_layout Plain Layout
(Wir nehmen an, dass 
\begin_inset Formula $G$
\end_inset

 zusammenhängend ist, da das Problem sonst einzeln pro Komponente lösbar
 wäre.)
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Ein allgemeiner MST-Algorithmus
\end_layout

\begin_layout Standard
Dieser Algorithmus färbt Kanten nach festen Regeln blau und rot.
 Es ist stets die Invariante 
\emph on

\begin_inset Quotes gld
\end_inset

Es gibt einen minimalen, aufspannenden Baum, der alle blauen und keine rote
 Kante enthält.
\begin_inset Quotes grd
\end_inset


\emph default
 erfüllt.
\end_layout

\begin_layout Description
Regel
\begin_inset space ~
\end_inset

B Wähle einen Schnitt, der keine blaue Kante enthält.
 Färbe eine seiner kürzesten Kanten blau.
\end_layout

\begin_layout Description
Regel
\begin_inset space ~
\end_inset

R Wähle einen Kreis, der keine rote Kante enthält.
 Färbe eine seiner längsten Kanten rot.
\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
MinimumSpanningTree
\series default

\begin_inset Formula $\left(G,c\right):$
\end_inset


\end_layout

\begin_layout Enumerate
Zu Beginn seien alle Kanten ungefärbt.
\end_layout

\begin_layout Enumerate
Wende Regeln B und R an, bis alle Kanten gefärbt sind.
\end_layout

\begin_layout Enumerate
Die blauen Kanten bilden einen minimalen aufspannenden Baum.
\end_layout

\end_inset


\end_layout

\begin_layout Proposition
Der Algorithmus färbt alle Kanten eines zusammenhängenden Graphen und erhält
 dabei die Invarianz-Bedingung, d.h.
 er berechnet einen minimalen aufspannenden Baum.
\end_layout

\begin_layout Subsubsection
Der Algorithmus von Boruvka
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Boruvka"

\end_inset


\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
Boruvka
\series default

\begin_inset Formula $\left(G,c\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Initialisiere 
\begin_inset Formula $n$
\end_inset

 blaue Bäume bestehend aus je einem Knoten.
\end_layout

\begin_layout Enumerate
Solange mehr als ein blauer Baum vorhanden ist, wähle gleichzeitig zu jedem
 blauen Baum die minimale inzidente Kante und färbe alle ausgewählten Kanten
 blau.
\end_layout

\begin_layout Enumerate
Die blauen Kanten bilden einen minimalen Baum.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Der Algorithmus kann blaue Kreise erzeugen, wenn es im Graphen Kanten gleichen
 Gewichts gibt.
\end_layout

\begin_layout Subsubsection
Der Algorithmus von Kruskal
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Kruskal"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
Kruskal
\series default

\begin_inset Formula $\left(G,c\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Initialisiere 
\begin_inset Formula $n$
\end_inset

 blaue Bäume bestehend aus je einem Knoten.
\end_layout

\begin_layout Enumerate
Sortiere die Kanten von 
\begin_inset Formula $G$
\end_inset

 nach nichtabsteigenden Gewichten, so dass 
\begin_inset Formula $c_{e_{1}}\leq c_{e_{2}}\leq\ldots\leq c_{e_{m}}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Für 
\begin_inset Formula $i=1,2,\ldots,m:$
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Sind die Endknoten von 
\begin_inset Formula $e_{i}$
\end_inset

 im gleichen blauen Baum, färbe 
\begin_inset Formula $e_{i}$
\end_inset

 rot, andernfalls blau.
\end_layout

\end_deeper
\begin_layout Enumerate
Die blauen Kanten bilden einen minimalen Baum.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Laufzeit: 
\begin_inset Formula $\mathcal{O}\left(E\log V\right)$
\end_inset

, wenn die Bäume per fast-union-find verwaltet werden.
 Ein Heap ermöglicht Optimierung bezöglich der Sortierung, da abgebrochen
 werden kann, wenn es 
\begin_inset Formula $n-1$
\end_inset

 blaue Kanten gibt.
\end_layout

\begin_layout Subsubsection
Der Algorithmus von Prim
\end_layout

\begin_layout Standard
Der Algorithmus verwendet nur Regel B und benötigt einen Startknoten 
\begin_inset Formula $s$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Prim"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
Prim
\series default

\begin_inset Formula $\left(G,c,s\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Initialisiere 
\begin_inset Formula $n$
\end_inset

 blaue Bäume bestehend aus je einem Knoten.
\end_layout

\begin_layout Enumerate
Solange noch blaue Bäume aus einem Knoten existieren, färbe minimale Kante
 im Schnitt induziert durch den Baum, der 
\begin_inset Formula $s$
\end_inset

 enthält, blau.
\end_layout

\begin_layout Enumerate
Die blauen Kanten bilden einen minimalen Baum.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Es folgt eine einfach Implementierung.
 
\begin_inset Formula $T$
\end_inset

 ist der angehende Baum:
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Prim1"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
Prim1
\series default

\begin_inset Formula $\left(G,c,s\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Setze 
\begin_inset Formula $V_{T}=\left\{ s\right\} $
\end_inset

, 
\begin_inset Formula $T=\emptyset$
\end_inset

 und 
\begin_inset Formula $i=0$
\end_inset

.
\end_layout

\begin_layout Enumerate
Falls 
\begin_inset Formula $i=n-1$
\end_inset

, 
\emph on
Stop
\emph default
(
\begin_inset Quotes gld
\end_inset

T ist MST
\begin_inset Quotes grd
\end_inset

).
\end_layout

\begin_layout Enumerate
Bestimme 
\begin_inset Formula $u\in V_{T}$
\end_inset

 und 
\begin_inset Formula $v\in V\setminus T_{T}$
\end_inset

 mit 
\begin_inset Formula $c_{uv}=\min\left\{ c_{xy}|x\in V_{T},y\in V\setminus V_{T}\right\} $
\end_inset

.
\end_layout

\begin_layout Enumerate
Setze 
\begin_inset Formula $V_{T}=V_{T}\cup\left\{ v\right\} $
\end_inset

 und 
\begin_inset Formula $T=T\cup\left\{ uv\right\} $
\end_inset

 und 
\begin_inset Formula $i=i+1$
\end_inset

.
 Gehe zu (2).
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Laufzeit: 
\begin_inset Formula $\mathcal{O}\left(VE\right)$
\end_inset


\end_layout

\begin_layout Standard
Es gibt eine bessere Implementierung.
\begin_inset Formula $t\left[v\right]$
\end_inset

 speichert den nächsten Baumknoten, 
\begin_inset Formula $d\left[v\right]$
\end_inset

 die zugehörige Distanz.
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Prim2"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
Prim2
\series default

\begin_inset Formula $\left(G,c,s\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Setze 
\begin_inset Formula $V_{T}=\left\{ s\right\} $
\end_inset

, 
\begin_inset Formula $T=\emptyset$
\end_inset

 und 
\begin_inset Formula $i=0$
\end_inset

.
 Setze 
\begin_inset Formula $d\left[v\right]=c_{sv}$
\end_inset

 und 
\begin_inset Formula $t\left[v\right]=s$
\end_inset

, falls 
\begin_inset Formula $sv\in E$
\end_inset

, setze 
\begin_inset Formula $d\left[v\right]=\infty$
\end_inset

 und 
\begin_inset Formula $t\left[v\right]=\bot$
\end_inset

, falls 
\begin_inset Formula $sv\notin E$
\end_inset

.
\end_layout

\begin_layout Enumerate
Falls 
\begin_inset Formula $i=n-1$
\end_inset

, 
\emph on
Stop
\emph default
(
\begin_inset Quotes gld
\end_inset

T ist MST
\begin_inset Quotes grd
\end_inset

).
\end_layout

\begin_layout Enumerate
Bestimme 
\begin_inset Formula $v\in V\setminus T_{T}$
\end_inset

 mit 
\begin_inset Formula $d\left[v\right]=\min\left\{ d\left[u\right]|u\in V\setminus V_{T}\right\} $
\end_inset

.
\end_layout

\begin_layout Enumerate
Setze 
\begin_inset Formula $V_{T}=V_{T}\cup\left\{ v\right\} $
\end_inset

 und 
\begin_inset Formula $T=T\cup\left\{ t\left[v\right]v\right\} $
\end_inset

.
\end_layout

\begin_layout Enumerate
Für alle 
\begin_inset Formula $w$
\end_inset

 adjazent zu 
\begin_inset Formula $v$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Enumerate
Falls 
\begin_inset Formula $w\in V\setminus V_{T}$
\end_inset

 und 
\begin_inset Formula $c_{vw}<d\left[w\right]$
\end_inset

, dann setze 
\begin_inset Formula $d\left[w\right]=c_{vw}$
\end_inset

 und 
\begin_inset Formula $t\left[w\right]=v$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Enumerate
Setze 
\begin_inset Formula $i=i+1$
\end_inset

 und gehe zu (2).
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Laufzeit (naiv):
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mathcal{O}\left(V^{2}\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Laufzeit (Heap):
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mathcal{O}\left(E\log V\right)$
\end_inset

 (besser für dünnbesetzte Graphen)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Laufzeit (Fib-Heap):
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mathcal{O}\left(E+V\log V\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Der Round-Robin-Algorithmus
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "RoundRobin"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
RoundRobin
\series default

\begin_inset Formula $\left(G,c\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Initialisiere 
\begin_inset Formula $n$
\end_inset

 blaue Bäume bestehend aus je einem Knoten.
\end_layout

\begin_layout Enumerate
Solange weniger als 
\begin_inset Formula $n-1$
\end_inset

 blaue Kanten vorhanden sind, wähle einen blauen Baum, bestimme die kürzeste
 Kante im durch diesen Baum induzierten Schnitt und färbe sie blau.
\end_layout

\begin_layout Enumerate
Die blauen Kanten bilden einen minimalen Baum.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Eine 
\begin_inset Formula $\mathcal{O}\left(E\log\log V\right)$
\end_inset

-Implementation ist möglich, wenn immer der kleinste Baum gewählt wird.
\end_layout

\begin_layout Subsubsection
Eine Anwendung aufspannender Bäume
\end_layout

\begin_layout Standard
Sogenannte 1-Bäume sind eine untere Schranke für eine optimale TSM-Tour.
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "OneTree"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
OneTree
\series default

\begin_inset Formula $\left(G,c\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Bestimme für die Knoten 
\begin_inset Formula $\left\{ 2,3,\ldots,n\right\} $
\end_inset

einen MST 
\begin_inset Formula $T$
\end_inset

.
 Sei 
\begin_inset Formula $c_{T}$
\end_inset

 die Länge des MST.
\end_layout

\begin_layout Enumerate
Seien 
\begin_inset Formula $e_{1}$
\end_inset

 und 
\begin_inset Formula $e_{2}$
\end_inset

 die zwei kürzesten Kanten an Knoten 
\begin_inset Formula $1$
\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $T\cup\left\{ e_{1},e_{2}\right\} $
\end_inset

ist optimaler 1-Baum mit Wert 
\begin_inset Formula $c_{T}+c_{e_{1}}+c_{e_{2}}$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Maximale Branchings
\end_layout

\begin_layout Standard
Neue Notationen: 
\begin_inset Formula $s:A\rightarrow V$
\end_inset

, 
\begin_inset Formula $t:A\rightarrow V$
\end_inset

 und 
\begin_inset Formula $c:A\rightarrow\mathbb{R}$
\end_inset

 sind Start- und Endknoten sowie Gewichte von Kanten.
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
Maximales-Branching-Problem
\end_layout

\begin_layout Plain Layout
Gegeben ist ein Digraph 
\begin_inset Formula $D=\left(V,A\right)$
\end_inset

 mit Kantengewichten 
\begin_inset Formula $c_{e}$
\end_inset

, für 
\begin_inset Formula $e\in A$
\end_inset

.
 Zu bestimmen ist ein Branching für 
\begin_inset Formula $D$
\end_inset

, dessen Gesamtgewicht möglichst groß ist.
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Der Branching-Algorithmus von Edmonds
\end_layout

\begin_layout Definition
Sei 
\begin_inset Formula $D=\left(V,A\right)$
\end_inset

 ein Digraph mit Kantengewichten 
\begin_inset Formula $c_{e}$
\end_inset

, für 
\begin_inset Formula $e\in A$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
a) Eine Kante 
\begin_inset Formula $e\in A$
\end_inset

 heißt 
\series bold
kritisch
\series default
, falls 
\begin_inset Formula $c\left(e\right)>0$
\end_inset

 und falls 
\begin_inset Formula $c\left(e^{\prime}\right)\leq c\left(e\right)$
\end_inset

, für alle 
\begin_inset Formula $e^{\prime}\in A$
\end_inset

 mit 
\begin_inset Formula $t\left(e^{\prime}\right)=t\left(e\right)$
\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
b) Ein Subgraph 
\begin_inset Formula $H\subseteq A$
\end_inset

 heißt 
\series bold
kritisch
\series default
, falls er nur aus kritischen Kanten besteht, jeder Knoten Endknoten von
 höchstens einer dieser Kanten ist, und falls er inklusionsmaximal bezüglich
 dieser Eigenschaft ist.
\end_layout

\end_deeper
\begin_layout Lemma
Ein azyklischer kritischer Graph 
\begin_inset Formula $H$
\end_inset

 ist ein maximaler Branching.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Lemma
Sei 
\begin_inset Formula $H$
\end_inset

 ein kritischer Graph.
 Dann ist jeder Knoten von 
\begin_inset Formula $H$
\end_inset

 in maximal einem Kreis enthalten.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Lemma
Seien 
\begin_inset Formula $B$
\end_inset

 ein Branching und 
\begin_inset Formula $u$
\end_inset

, 
\begin_inset Formula $v$
\end_inset

, 
\begin_inset Formula $w$
\end_inset

 drei Knoten.
 Falls 
\begin_inset Formula $u\underset{B}{\rightarrow}v$
\end_inset

 und 
\begin_inset Formula $w\underset{B}{\rightarrow}v$
\end_inset

, dann gilt entweder 
\begin_inset Formula $u\underset{B}{\rightarrow}w$
\end_inset

 oder 
\begin_inset Formula $w\underset{B}{\rightarrow}u$
\end_inset

.
\end_layout

\begin_layout Definition*
Sei 
\begin_inset Formula $B$
\end_inset

 ein Branching.
 Eine Kante 
\begin_inset Formula $e\notin B$
\end_inset

 heißt 
\series bold
zulässig
\series default
 (relativ zu B), falls die Menge 
\begin_inset Formula $B^{\prime}=B\cup\left\{ e\right\} \setminus\left\{ f|f\in B\wedge t\left(f\right)=t\left(e\right)\right\} $
\end_inset

 ebenfalls ein Branching ist.
\end_layout

\begin_layout Lemma
Sei 
\begin_inset Formula $B$
\end_inset

 ein Branching und 
\begin_inset Formula $e\in A\setminus B$
\end_inset

.
 Dann ist 
\begin_inset Formula $e$
\end_inset

 genau dann zulässig relativ zu 
\begin_inset Formula $B$
\end_inset

, wenn kein Weg von 
\begin_inset Formula $t\left(e\right)$
\end_inset

 nach 
\begin_inset Formula $s\left(e\right)$
\end_inset

 in 
\begin_inset Formula $B$
\end_inset

 existiert.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Lemma
Sei 
\begin_inset Formula $B$
\end_inset

 ein Branching und 
\begin_inset Formula $C$
\end_inset

 ein Kreis mit der Eigenschaft, dass keine Kante aus 
\begin_inset Formula $C\setminus B$
\end_inset

 zulässig relativ zu 
\begin_inset Formula $B$
\end_inset

 ist.
 Dann gilt 
\begin_inset Formula $\left|C\setminus B\right|=1$
\end_inset

.
 
\end_layout

\begin_layout Proposition
Sei 
\begin_inset Formula $H$
\end_inset

 ein kritischer Graph.
 Dann existiert ein Branching 
\begin_inset Formula $B$
\end_inset

 mit maximalem Gewicht, so dass für jeden Kreis 
\begin_inset Formula $C\subseteq H$
\end_inset

 gilt 
\begin_inset Formula $\left|C\setminus B\right|=1$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
Im Folgenden bezeichne 
\begin_inset Formula $V_{i}=V\left(C_{i}\right)$
\end_inset

 und 
\begin_inset Formula $a_{i}$
\end_inset

 die kürzeste Kante in 
\begin_inset Formula $C_{i}$
\end_inset

.
\end_layout

\begin_layout Corollary
Sei 
\begin_inset Formula $D=\left(V,A\right)$
\end_inset

 ein Digraph mit Kantengewichten und 
\begin_inset Formula $H$
\end_inset

 ein kritischer Graph mit Kreisen 
\begin_inset Formula $C_{i},i=1,2,\ldots,k$
\end_inset

.
 Es existiert ein gewichtsmaximales Branching 
\begin_inset Formula $B$
\end_inset

 mit den Eigenschaften
\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
a) 
\begin_inset Formula $\left|C_{i}\setminus B\right|=1$
\end_inset

, für 
\begin_inset Formula $i=1,2,\ldots,k$
\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
b) Falls für jede Kante 
\begin_inset Formula $e\in B\setminus C_{i}$
\end_inset

 gilt, dass 
\begin_inset Formula $t\left(e\right)\notin V_{i},$
\end_inset

dann folgt 
\begin_inset Formula $C_{i}\setminus B=\left\{ a_{i}\right\} $
\end_inset

.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Branching (Schrumpfen)"

\end_inset


\begin_inset Box Boxed
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
Schrumpfen von kritischen Graphen
\series default
:
\end_layout

\begin_layout Plain Layout
Sei 
\begin_inset Formula $\widetilde{V}=V\setminus\bigcup_{i=1}^{k}V_{i}$
\end_inset

.
 Für 
\begin_inset Formula $v\in V_{i}$
\end_inset

 sei 
\begin_inset Formula $\widetilde{e}\left(v\right)$
\end_inset

 die Kante aus 
\begin_inset Formula $C_{i}$
\end_inset

 mit 
\begin_inset Formula $t\left(\widetilde{e}\left(v\right)\right)=v$
\end_inset

, d.h.
 die Kreiskante mit Endknoten 
\begin_inset Formula $v$
\end_inset

.
\end_layout

\begin_layout Plain Layout
\begin_inset Formula 
\[
\begin{aligned}\overline{A}= & \left\{ e\in A|\text{für kein }i\text{ gilt }s\left(e\right)\in V_{i}\text{ und }t\left(e\right)\in V_{i}\right\} \\
= & A\setminus\bigcup_{i=1}^{k}A\left(V\left(C_{i}\right)\right)\text{,}\\
\overline{V}= & \widetilde{V}\cup\left\{ w_{1},w_{2},\ldots,w_{k}\right\} \text{, wobei die \ensuremath{w_{i}} neue Symbole sind,}\\
\overline{s}\left(e\right)= & \begin{cases}
s\left(e\right)\text{,} & \text{falls \ensuremath{s\left(e\right)\in\widetilde{V}},}\\
w_{i} & \text{falls \ensuremath{s\left(e\right)\in V_{i}},}
\end{cases}\\
\overline{t}\left(e\right)= & \begin{cases}
t\left(e\right)\text{,} & \text{falls \ensuremath{t\left(e\right)\in\widetilde{V}},}\\
w_{i} & \text{falls \ensuremath{t\left(e\right)\in V_{i}},}
\end{cases}\\
\overline{c}\left(e\right)= & \begin{cases}
c\left(e\right)\text{,} & \text{falls \ensuremath{t\left(e\right)\in\widetilde{V}},}\\
c\left(e\right)-c\left(\widetilde{e}\left(t\left(e\right)\right)\right)+c\left(a_{i}\right) & \text{falls \ensuremath{t\left(e\right)\in V_{i}}.}
\end{cases}
\end{aligned}
\]

\end_inset


\end_layout

\begin_layout Plain Layout
Es entsteht ein neues Problem 
\begin_inset Formula $\overline{P}$
\end_inset

 im Digraphen 
\begin_inset Formula $\overline{D}=\left(\overline{V},\overline{A}\right)$
\end_inset

 mit den neuen Inzidenzfunktionen 
\begin_inset Formula $\overline{s}$
\end_inset

, 
\begin_inset Formula $\overline{t}$
\end_inset

 und Gewichtsfunktion 
\begin_inset Formula $\overline{c}$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Proposition
Es gibt eine bijektive Abbildung zwischen 
\begin_inset Formula $\mathcal{B}$
\end_inset

 (der Menge der Branchings im Originalproblem) und der Menge der Branchings
 im Problem 
\begin_inset Formula $\overline{P}$
\end_inset

.
 Es korrespondiert das Branching 
\begin_inset Formula $B\in\mathcal{B}$
\end_inset

 mit dem Branching 
\begin_inset Formula $\overline{B}=B\cap\overline{A}$
\end_inset

 in 
\begin_inset Formula $\overline{P}$
\end_inset

 und es gilt:
\end_layout

\begin_layout Proposition
\begin_inset Formula 
\[
c\left(B\right)-\overline{c}\left(\overline{B}\right)=\sum_{i=1}^{k}c\left(C_{i}\right)-\sum_{i=1}^{k}c\left(a_{i}\right)\text{.}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Branching"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
Branching
\series default

\begin_inset Formula $\left(D,c\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Bestimme einen kritischen Graphen 
\begin_inset Formula $H$
\end_inset

 für 
\begin_inset Formula $D$
\end_inset

.
\end_layout

\begin_layout Enumerate
Ist 
\begin_inset Formula $H$
\end_inset

 azyklisch, dann 
\emph on
Stop
\emph default
(
\begin_inset Quotes gld
\end_inset


\begin_inset Formula $H$
\end_inset

 ist optimales Branching für 
\begin_inset Formula $D$
\end_inset


\begin_inset Quotes grd
\end_inset

).
\end_layout

\begin_layout Enumerate
Schrumpfe die Kreise von 
\begin_inset Formula $H$
\end_inset

, um 
\begin_inset Formula $\overline{D}$
\end_inset

 und 
\begin_inset Formula $\overline{c}$
\end_inset

 zu erhalten.
\end_layout

\begin_layout Enumerate
Berechne durch den rekursiven Aufruf 
\emph on
Branching
\emph default

\begin_inset Formula $\left(\overline{D},\overline{c}\right)$
\end_inset

 ein optimales Branching 
\begin_inset Formula $\overline{B}$
\end_inset

 für 
\begin_inset Formula $\overline{D}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Expandiere das Branching 
\begin_inset Formula $\overline{B}$
\end_inset

 zu einem optimalen Branching 
\begin_inset Formula $B$
\end_inset

 für 
\begin_inset Formula $D$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Laufzeit: 
\begin_inset Formula $\mathcal{O}\left(A\log V\right)$
\end_inset

 oder 
\begin_inset Formula $\mathcal{O}\left(V^{2}\right)$
\end_inset

.
\end_layout

\begin_layout Subsubsection
Arboreszenzen und das asymmetrische TSP
\end_layout

\begin_layout Standard
\begin_inset Formula $\rightarrow$
\end_inset

analog zum symmetrischen Fall
\end_layout

\begin_layout Section
Kürzeste Wege
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
Kürstester-
\begin_inset Formula $\left(s,t\right)$
\end_inset

-Weg-Problem
\end_layout

\begin_layout Plain Layout
Gegeben sind ein Digraph 
\begin_inset Formula $D=\left(V,A\right)$
\end_inset

 mit Kantengewichten 
\begin_inset Formula $c_{e}$
\end_inset

 für 
\begin_inset Formula $e\in A$
\end_inset

, und zwei Knoten 
\begin_inset Formula $s,t\in V$
\end_inset

.
 Zu bestimmen ist ein 
\begin_inset Formula $\left(s,t\right)$
\end_inset

-Weg in 
\begin_inset Formula $D$
\end_inset

, dessen Gesamtlänge möglichst klein ist.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Eigenschaften kürzester Wege
\end_layout

\begin_layout Definition*
Im folgenden ist 
\begin_inset Formula $s\in V$
\end_inset

 der Startknoten, dessen kürzeste Wege berechnet werden sollen.
 
\begin_inset Formula $\delta\left(u,v\right)$
\end_inset

 ist die Länge des kürzesten 
\begin_inset Formula $\left(u,v\right)$
\end_inset

-Weges, bzw.
 
\begin_inset Formula $+\infty$
\end_inset

 (oder 
\begin_inset Formula $-\infty$
\end_inset

) wenn keiner existiert.
 
\begin_inset Formula $\pi\left[v\right]$
\end_inset

 ist der Vorgängerknoten von 
\begin_inset Formula $v$
\end_inset

 auf dem kürstesten 
\begin_inset Formula $\left(s,v\right)$
\end_inset

-Weg.
\end_layout

\begin_layout Lemma
Sei 
\begin_inset Formula $p=\left(v_{1}v_{2},v_{2}v_{3},\ldots,v_{k-1}v_{k},\right)$
\end_inset

 ein kürzester Weg von 
\begin_inset Formula $v_{1}$
\end_inset

 nach 
\begin_inset Formula $v_{k}$
\end_inset

.
 Dann ist für 
\begin_inset Formula $1\leq i\leq j\leq k$
\end_inset

 der Teilweg 
\begin_inset Formula $\left(v_{i}v_{i+1},\ldots,v_{j-1}v_{j},\right)$
\end_inset

 ein kürzester Weg von 
\begin_inset Formula $v_{i}$
\end_inset

 nach 
\begin_inset Formula $v_{j}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Lemma
Für jede Kante 
\begin_inset Formula $\left(u,v\right)$
\end_inset

 gilt 
\begin_inset Formula $\delta\left(s,v\right)\leq\delta\left(s,u\right)+c_{uv}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
Die 
\series bold
Standardinitialisierung
\series default
 für 
\begin_inset Formula $d$
\end_inset

 ist 
\begin_inset Formula $d\left[s\right]=0$
\end_inset

 und 
\begin_inset Formula $d\left[v\right]=\infty,v\in V\setminus\left\{ s\right\} $
\end_inset

 und 
\begin_inset Formula $\pi\left[v\right]=\bot,v\in V$
\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Correct"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
Correct
\series default

\begin_inset Formula $\left(u,v\right)$
\end_inset

:
\end_layout

\begin_layout Plain Layout
Falls 
\begin_inset Formula $d\left[v\right]>d\left[u\right]+c_{uv}$
\end_inset

, dann setze 
\begin_inset Formula $d\left[v\right]=d\left[u\right]+c_{uv}$
\end_inset

 und 
\begin_inset Formula $\pi\left[v\right]=u$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Lemma
Nach Initialisierung gilt 
\begin_inset Formula $d\left[v\right]\geq\delta\left(s,v\right)$
\end_inset

, für alle 
\begin_inset Formula $v\in V$
\end_inset

.
 Dies gilt auch nach Ausführung einer beliebigen Folge von Correct()-Aufrufen.
 Falls einmal 
\begin_inset Formula $d\left[v\right]=\delta\left(s,v\right)$
\end_inset

 gilt, so kann 
\begin_inset Formula $d\left[v\right]$
\end_inset

nicht mehr verändert werden.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Lemma
\begin_inset Formula $D$
\end_inset

 enthalte keine von 
\begin_inset Formula $s$
\end_inset

 aus erreichbaren negativen Kreise und die Standardinitialisierung sei ausgeführ
t.
 Für jede Folge von Korrekturoperationen bildet der durch 
\begin_inset Formula $\pi$
\end_inset

 bestimmte Digraph 
\begin_inset Formula $D_{\pi}$
\end_inset

 eine Arboreszenz mit Wurzel 
\begin_inset Formula $s$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Subsection
Der Algorithmus von Dijkstra
\end_layout

\begin_layout Standard
Der Algorithmus berechnet alle kürzesten Wege von 
\begin_inset Formula $s$
\end_inset

, wenn 
\begin_inset Formula $c_{uv}\geq0$
\end_inset

, für alle 
\begin_inset Formula $\left(u,v\right)\in A$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Dijkstra"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
Dijkstra
\series default

\begin_inset Formula $\left(D,c,s\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Setze 
\begin_inset Formula $d\left[v\right]=\infty$
\end_inset

, für alle 
\begin_inset Formula $v\in V\setminus\left\{ s\right\} $
\end_inset

, 
\begin_inset Formula $d\left[s\right]=0$
\end_inset

 und 
\begin_inset Formula $\pi\left[v\right]=\bot$
\end_inset

 für alle 
\begin_inset Formula $v\in V$
\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $S=\emptyset,Q=V$
\end_inset

.
\end_layout

\begin_layout Enumerate
Solange 
\begin_inset Formula $Q\neq\emptyset$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Enumerate
Bestimme 
\begin_inset Formula $u$
\end_inset

 mit 
\begin_inset Formula $d\left[u\right]=\min_{v}\left\{ d\left[v\right]|v\in Q\right\} $
\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $S=S\cup\left\{ u\right\} ,Q=Q\setminus\left\{ u\right\} $
\end_inset


\end_layout

\begin_layout Enumerate
Für jede Kante 
\begin_inset Formula $\left(u,v\right)\in A$
\end_inset

 mit 
\begin_inset Formula $v\in Q$
\end_inset

 führe 
\emph on
Correct
\emph default

\begin_inset Formula $\left(u,v\right)$
\end_inset

 aus.
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Laufzeit (naiv):
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mathcal{O}\left(V^{2}\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Laufzeit (Heap):
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mathcal{O}\left(A\log V\right)$
\end_inset

 (besser für dünnbesetzte Graphen)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Laufzeit (Fib-Heap):
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\mathcal{O}\left(A+V\log V\right)$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Proposition
Nach Ausführung des Algorithmus von Dijkstra gilt 
\begin_inset Formula $d\left[v\right]=\delta\left(s,v\right)$
\end_inset

 für alle 
\begin_inset Formula $v\in V$
\end_inset

.
\end_layout

\begin_layout Subsection
Der Algorithmus von Bellman und Ford
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "BellmanFord"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
BellmanFord
\series default

\begin_inset Formula $\left(D,c,s\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Initialisiere 
\begin_inset Formula $d\left[v\right]=\infty$
\end_inset

, für alle 
\begin_inset Formula $v\in V\setminus s$
\end_inset

, 
\begin_inset Formula $d\left[s\right]=0,\pi\left[v\right]=\bot$
\end_inset

 für alle 
\begin_inset Formula $v\in V$
\end_inset

.
\end_layout

\begin_layout Enumerate
Führe die folgende Schleife 
\begin_inset Formula $\left(\left|V\right|-1\right)$
\end_inset

-mal aus:
\end_layout

\begin_deeper
\begin_layout Enumerate
Für alle 
\begin_inset Formula $\left(u,v\right)\in A$
\end_inset

 führe 
\emph on
Correct
\emph default

\begin_inset Formula $\left(u,v\right)$
\end_inset

 aus.
\end_layout

\end_deeper
\begin_layout Enumerate
Für alle 
\begin_inset Formula $\left(u,v\right)\in A$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Enumerate
Falls 
\begin_inset Formula $d\left[v\right]>d\left[u\right]+c_{uv}$
\end_inset

 dann 
\emph on
Stop
\emph default
(
\begin_inset Quotes gld
\end_inset

Graph enthält negativen Kreis
\begin_inset Quotes grd
\end_inset

).
\end_layout

\end_deeper
\begin_layout Enumerate

\emph on
Stop
\emph default
(
\begin_inset Quotes gld
\end_inset

Der Kürzeste-Wege-Baum wurde berechnet
\begin_inset Quotes grd
\end_inset

).
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Laufzeit: 
\begin_inset Formula $\mathcal{O}\left(VA\right)$
\end_inset


\end_layout

\begin_layout Lemma
\begin_inset Formula $D$
\end_inset

 enthalte keinen von 
\begin_inset Formula $s$
\end_inset

 aus erreichbaren negativen Kreis.
 Dann gilt bei Terminierung des Bellman-Ford-Algorithmus 
\begin_inset Formula $d\left[v\right]=\delta\left(s,v\right)$
\end_inset

 für alle Knoten in 
\begin_inset Formula $v$
\end_inset

, die von 
\begin_inset Formula $s$
\end_inset

 aus erreichbar sind.
\end_layout

\begin_layout Corollary
Es gibt einen Weg von 
\begin_inset Formula $s$
\end_inset

 nach 
\begin_inset Formula $v$
\end_inset

 genau dann, wenn der Bellman-Ford-Algorithmus mit 
\begin_inset Formula $d\left[v\right]<\infty$
\end_inset

 terminiert.
\end_layout

\begin_layout Proposition
Der Bellman-Ford-Algorithmus arbeitet korrekt, das heißt entweder er stellt
 fest, dass 
\begin_inset Formula $D$
\end_inset

 einen negativen Kreis enthält, oder er berechnet die Arboreszenz der kürzesten
 Wege von 
\begin_inset Formula $s$
\end_inset

 zu allen erreichbaren Knoten.
\end_layout

\begin_layout Paragraph
Yen-Variante
\end_layout

\begin_layout Standard
Ersetze (2.1) durch:
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
(2.1) Für 
\begin_inset Formula $i=1,\ldots,n$
\end_inset

: 
\emph on
Correct
\emph default

\begin_inset Formula $\left(v_{i},v_{k}\right)$
\end_inset

 für alle 
\begin_inset Formula $\left(v_{i},v_{k}\right)\in A$
\end_inset

 mit 
\begin_inset Formula $i<k$
\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
(2.2) Für 
\begin_inset Formula $i=n,n-1,\ldots,1$
\end_inset

: 
\emph on
Correct
\emph default

\begin_inset Formula $\left(v_{i},v_{j}\right)$
\end_inset

 für alle 
\begin_inset Formula $\left(v_{i},v_{j}\right)\in A$
\end_inset

 mit 
\begin_inset Formula $i>j$
\end_inset

.
\end_layout

\begin_layout Paragraph
Variante von d’Esopo und Pape
\end_layout

\begin_layout Standard
Bevorzugt Knoten, die sich verbessert haben.
 Exponentielle Worst-Case-Laufzeit, aber oft effizienter für dünne Graphen.
\end_layout

\begin_layout Standard
Modifikation der Correct-Operation:
\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
Correct
\series default

\begin_inset Formula $\left(u,v\right)$
\end_inset

:
\end_layout

\begin_layout Plain Layout
Falls 
\begin_inset Formula $d\left[v\right]>d\left[u\right]+c_{uv}$
\end_inset

, dann:
\end_layout

\begin_layout Enumerate
Setze 
\begin_inset Formula $d\left[v\right]=d\left[u\right]+c_{uv}$
\end_inset

 und 
\begin_inset Formula $\pi\left[v\right]=u$
\end_inset

.
\end_layout

\begin_layout Enumerate
Falls 
\begin_inset Formula $v$
\end_inset

 noch nicht in 
\begin_inset Formula $Q$
\end_inset

 war, setze 
\begin_inset Formula $v$
\end_inset

 an das Ende von 
\begin_inset Formula $Q$
\end_inset

.
\end_layout

\begin_layout Enumerate
Falls 
\begin_inset Formula $v$
\end_inset

 schon in 
\begin_inset Formula $Q$
\end_inset

 war, aber gegenwärtig nicht 
\begin_inset Formula $Q$
\end_inset

 ist, dann setze 
\begin_inset Formula $v$
\end_inset

 an den Anfang von 
\begin_inset Formula $Q$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Terminiert, wenn 
\begin_inset Formula $Q$
\end_inset

 leer.
\end_layout

\begin_layout Paragraph
Verfahren von Nicholson
\end_layout

\begin_layout Standard
Sucht kürzesten 
\begin_inset Formula $\left(s,t\right)$
\end_inset

-Weg gleichzeitig von 
\begin_inset Formula $s$
\end_inset

 und 
\begin_inset Formula $t$
\end_inset

.
\end_layout

\begin_layout Paragraph
\begin_inset Formula $A^{\ast}$
\end_inset

-Verfahren
\end_layout

\begin_layout Standard
Verwendet Schätzwerte 
\begin_inset Formula $s\left(v,t\right)$
\end_inset

 für die Entfernung zum Zielknoten, priorisiert Knoten mit niedrigem 
\begin_inset Formula $d\left[v\right]+s\left(v,t\right)$
\end_inset

.
 Terminiert, wenn 
\begin_inset Formula $d\left[t\right]$
\end_inset

 und 
\begin_inset Formula $s\left(s,t\right)$
\end_inset

 nag genug beieinander.
\end_layout

\begin_layout Subsection
Kürzeste Wege in azyklischen Digraphen
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "DAGShortestPath"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
DAGShortestPath
\series default

\begin_inset Formula $\left(D,c,s\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Sei 
\begin_inset Formula $t\left[1\right],\ldots,t\left[n\right]$
\end_inset

 eine topologische Sortierung der Knoten von 
\begin_inset Formula $D$
\end_inset

.
\end_layout

\begin_layout Enumerate
Setze 
\begin_inset Formula $d\left[v\right]=\infty$
\end_inset

, für alle 
\begin_inset Formula $v\in V\setminus\left\{ s\right\} $
\end_inset

, 
\begin_inset Formula $\pi\left[v\right]=\bot$
\end_inset

, für alle 
\begin_inset Formula $v\in V$
\end_inset

, und 
\begin_inset Formula $d\left[s\right]=0$
\end_inset

.
\end_layout

\begin_layout Enumerate
Für 
\begin_inset Formula $i=1,2,\ldots,n$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Enumerate
Setze 
\begin_inset Formula $u=t\left[i\right]$
\end_inset

.
\end_layout

\begin_layout Enumerate
Für alle 
\begin_inset Formula $v\in V$
\end_inset

 mit 
\begin_inset Formula $\left(u,v\right)\in A$
\end_inset

 führe 
\emph on
Correct
\begin_inset Formula $\left(u,v\right)$
\end_inset

 aus.
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Standard
Laufzeit: 
\begin_inset Formula $\mathcal{O}\left(V+A\right)$
\end_inset


\end_layout

\begin_layout Subsubsection
Berechnung optimaler Lösungen des Knapsack-Problems
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
ToDO
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Eine Anwendung in der Tourenplanung
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
ToDo
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Längste Wege
\end_layout

\begin_layout Standard
Dies ist nur in azyklischen Digraphen möglich, oder wenn alle Kantengewichte
 negativ oder 0 sind.
\end_layout

\begin_layout Standard
Entweder man komplementiert alle Gewichte oder ändert die Initialisierung
 von 
\begin_inset Formula $d$
\end_inset

 in 
\begin_inset Formula $-\infty$
\end_inset

 und dreht den Vergleich in der 
\emph on
Correct
\emph default
-Operation um.
\end_layout

\begin_layout Subsection
Kürzeste Wege zwischen allen Knotenpaaren
\end_layout

\begin_layout Standard
Eine Möglichkeit wäre das 
\begin_inset Formula $\left|V\right|$
\end_inset

-malige Anwenden von Dijkstra oder Bellman-Ford, was in der 
\begin_inset Formula $\left|V\right|$
\end_inset

-fachen Komplexität resultiert.
\end_layout

\begin_layout Subsubsection
Der Algorithmus von Floyd und Warshall
\end_layout

\begin_layout Standard
\begin_inset Formula $D$
\end_inset

 habe ganzzahlige Gewichte und keine negativen Kreise.
\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
AllPairsShortestPaths
\series default

\begin_inset Formula $\left(D,c\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Setze 
\begin_inset Formula $d\left[i,j\right]=+\infty$
\end_inset

, für alle 
\begin_inset Formula $i,j\in V$
\end_inset

, und 
\begin_inset Formula $d\left[i,i\right]=0$
\end_inset

, für alle 
\begin_inset Formula $i\in V$
\end_inset

.
\end_layout

\begin_layout Enumerate
Für alle 
\begin_inset Formula $\left(i,j\right)\in A$
\end_inset

, setze 
\begin_inset Formula $d\left[i,j\right]=c_{ij}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Solange es Knoten 
\begin_inset Formula $i,j,k\in V$
\end_inset

 gibt, mit 
\begin_inset Formula $d\left[i,j\right]>d\left[i,k\right]+d\left[k,j\right]$
\end_inset

 setze 
\begin_inset Formula $d\left[i,j\right]=d\left[i,k\right]+d\left[k,j\right]$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Laufzeit: 
\begin_inset Formula $\mathcal{O}\left(\left|V\right|^{2}\left(2\left|V\right|C\right)\right)$
\end_inset

 mit 
\begin_inset Formula $C$
\end_inset

 = 
\begin_inset Formula $\max\left\{ \left|c_{ij}\right||\left(i,j\right)\in A\right\} $
\end_inset

 -> nicht poly!
\end_layout

\begin_layout Standard
Eine Verbesserung ergibt sich wie folgt:
\end_layout

\begin_layout Standard
Wenn alle kürzesten Wege bekannt sind, die nur die ersten 
\begin_inset Formula $k-1$
\end_inset

 Knoten als Zwischenknoten verwenden, lässt sich ein kürzester Weg, der
 den 
\begin_inset Formula $k$
\end_inset

-ten Knoten (und möglicherweise seine Vorgänger) als Zwischenknoten nutzt
 durch 
\begin_inset Formula $d\left(i,k\right)+d\left(k,j\right)$
\end_inset

 bestimmen.
\end_layout

\begin_layout Standard
Sei 
\begin_inset Formula $D^{\left(k\right)}$
\end_inset

 eine Matrix mit 
\begin_inset Formula $d_{ij}^{\left(k\right)}$
\end_inset

 als kürzester Weg zwischen 
\begin_inset Formula $i$
\end_inset

 und 
\begin_inset Formula $j$
\end_inset

, der nur die ersten 
\begin_inset Formula $k$
\end_inset

 Knoten als Zwischenknoten nutzt:
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "FloydWarshall"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
FloydWarshall
\series default

\begin_inset Formula $\left(C\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Initialisiere 
\begin_inset Formula $D^{\left(0\right)}=C$
\end_inset

, mit 
\begin_inset Formula $c_{ij}=+\infty$
\end_inset

 wenn keine Kante 
\begin_inset Formula $\left(i,j\right)$
\end_inset

 existiert.
\end_layout

\begin_layout Enumerate
Für 
\begin_inset Formula $k=1,2,\ldots,\left|V\right|$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Enumerate
Für 
\begin_inset Formula $i=1,2,\ldots,\left|V\right|$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Enumerate
Für 
\begin_inset Formula $j=1,2,\ldots,\left|V\right|$
\end_inset

:
\begin_inset Newline newline
\end_inset


\begin_inset Formula $d_{ij}^{\left(k\right)}=\min\left\{ d_{ij}^{\left(k-1\right)},d_{ik}^{\left(k-1\right)}+d_{kj}^{\left(k-1\right)}\right\} $
\end_inset


\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
\begin_inset Formula $D^{\left(\left|V\right|\right)}$
\end_inset

 enthält die Längen der kürzesten Wege.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Laufzeit: 
\begin_inset Formula $\mathcal{O}\left(V^{3}\right)$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Johnson"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
Johnson
\series default

\begin_inset Formula $\left(D,c\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Bilde 
\begin_inset Formula $D^{\prime}=\left(V^{\prime},A^{\prime}\right)$
\end_inset

 mit 
\begin_inset Formula $V^{\prime}=V\cup\left\{ s\right\} $
\end_inset

, 
\begin_inset Formula $A^{\prime}=A\cup\left\{ \left(s,v\right)|v\in V\right\} $
\end_inset

 und setze 
\begin_inset Formula $c_{sv}=0$
\end_inset

, für alle 
\begin_inset Formula $v\in V$
\end_inset

.
\end_layout

\begin_layout Enumerate
Führe 
\emph on
Bellman-Ford
\emph default

\begin_inset Formula $\left(D^{\prime},c,s\right)$
\end_inset

 aus.
\end_layout

\begin_layout Enumerate
Enthält 
\begin_inset Formula $D^{\prime}$
\end_inset

 negative Kreise, 
\emph on
Stop
\emph default
(
\begin_inset Quotes gld
\end_inset

Algorithmus nicht anwendbar
\begin_inset Quotes grd
\end_inset

)
\end_layout

\begin_layout Enumerate
Setze für jeden Knoten 
\begin_inset Formula $v\in V:h\left[v\right]=\delta\left(s,v\right)$
\end_inset

.
\end_layout

\begin_layout Enumerate
Setze für jede Kante 
\begin_inset Formula $\left(u,v\right)\in A:\overline{c}_{uv}=c_{uv}+h\left[u\right]-h\left[v\right]$
\end_inset

.
\end_layout

\begin_layout Enumerate
Für jeden Knoten 
\begin_inset Formula $u\in V$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Enumerate
Führe Dijkstra
\begin_inset Formula $\left(D,\overline{c},u\right)$
\end_inset

 aus.
 Sei 
\begin_inset Formula $\overline{\delta}\left(u,v\right)$
\end_inset

 die Kürzeste-Wege-Distanz von 
\begin_inset Formula $u$
\end_inset

 nach 
\begin_inset Formula $v\in V\setminus\left\{ u\right\} $
\end_inset

 (bzgl.
 
\begin_inset Formula $\overline{c}$
\end_inset

).
\end_layout

\begin_layout Enumerate
Für jedes 
\begin_inset Formula $v\in V\setminus\left\{ u\right\} $
\end_inset

 ist die Länge des kürzesten 
\begin_inset Formula $\left(u,v\right)$
\end_inset

-Weges 
\begin_inset Formula $\overline{\delta}\left(u,v\right)+h\left[v\right]-h\left[u\right]$
\end_inset

.
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Standard
Laufzeit: 
\begin_inset Formula $\mathcal{O}\left(VA\log V\right)$
\end_inset

 oder 
\begin_inset Formula $\mathcal{O}\left(VA+V^{2}\log V\right)$
\end_inset

 je nach Dijkstra-Implementierung
\end_layout

\begin_layout Subsection
Varianten kürzester Wege
\end_layout

\begin_layout Subsubsection
Bottleneck-Probleme
\end_layout

\begin_layout Standard
In einem Graphen wird ein 
\begin_inset Formula $\left(s,t\right)$
\end_inset

-Weg gesucht, dessen kürzeste Kante größtmögliche Länge hat.
\end_layout

\begin_layout Paragraph
Initialisierung
\end_layout

\begin_layout Standard
\begin_inset Formula $d\left[v\right]=-\infty$
\end_inset

, für alle 
\begin_inset Formula $v\in V\setminus\left\{ s\right\} $
\end_inset

, 
\begin_inset Formula $d\left[s\right]=+\infty,\pi\left[v\right]=\bot$
\end_inset

, für alle 
\begin_inset Formula $v\in V$
\end_inset

.
\end_layout

\begin_layout Paragraph
Korrektur
\end_layout

\begin_layout Standard
Falls 
\begin_inset Formula $d\left[v\right]<\min\left\{ d\left[u\right],c_{uv}\right\} $
\end_inset

, dann setze 
\begin_inset Formula $d\left[v\right]=\min\left\{ d\left[u\right],c_{uv}\right\} $
\end_inset

 und 
\begin_inset Formula $\pi\left[v\right]=u$
\end_inset

.
\end_layout

\begin_layout Subsubsection
Netzwerke mit Gewinnen und Verlusten
\end_layout

\begin_layout Standard
Das 
\series bold
Arbitrage-Problem
\series default
 funktioniert wie ein Kürzeste-Wege-Problem, nur dass Kanten auf einem Weg
 multipliziert werden.
 Entweder Initialisierung und Correct werden angepasst, oder alle Kantengewichte
 logarithmiert.
\end_layout

\begin_layout Subsection
Kreise mit bestem Kosten-Zeit-Verhältnis
\end_layout

\begin_layout Standard
Gesucht ist 
\begin_inset Formula $\mu^{\ast}=\min_{B\text{ Kreis in }D}\mu\left(B\right)$
\end_inset

 mit 
\begin_inset Formula $\mu\left(B\right)=\frac{\sum_{\left(i,j\right)\in B}c_{ij}}{\sum_{\left(i,j\right)\in B}\tau_{ij}}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula $\mu$
\end_inset

 ist ein Schätzwert für 
\begin_inset Formula $\mu^{\ast}\in\left[-\left|V\right|C,+\left|V\right|C\right]$
\end_inset

, welcher per Intervallschachtelung verbessert wird.
 
\begin_inset Formula $\left(C=\max c_{ij}\right)$
\end_inset


\end_layout

\begin_layout Standard
Es wird ein Digraph 
\begin_inset Formula $\overline{D}$
\end_inset

 erstellt mit 
\begin_inset Formula $l_{ij}=c_{ij}-\mu\tau_{ij}$
\end_inset

 für alle 
\begin_inset Formula $\left(i,j\right)\in A$
\end_inset

.
\end_layout

\begin_layout Itemize
Enthält 
\begin_inset Formula $\overline{D}$
\end_inset

 einen negativen Kreis, ist 
\begin_inset Formula $\mu$
\end_inset

 zu groß.
\end_layout

\begin_layout Itemize
Enthält 
\begin_inset Formula $\overline{D}$
\end_inset

 nur positive Kreise, ist 
\begin_inset Formula $\mu$
\end_inset

 zu klein.
\end_layout

\begin_layout Itemize
Enthält 
\begin_inset Formula $\overline{D}$
\end_inset

 einen Kreis der Länge 
\begin_inset Formula $0$
\end_inset

, minimiert dieser die Zielfunktion.
\end_layout

\begin_layout Standard
Das Verfahren kann auch abgebrochen werden, wenn die Intervallgrenzen weniger
 als 
\begin_inset Formula $\frac{1}{n^{2}T^{2}}$
\end_inset

 auseinander liegen.
 
\begin_inset Formula $\left(T=\max\tau_{ij}\right)$
\end_inset


\end_layout

\begin_layout Standard
Laufzeit: 
\begin_inset Formula $\mathcal{O}\left(VA\log\left(CVT\right)\right)$
\end_inset


\end_layout

\begin_layout Section
Das Zuordnungsproblem
\end_layout

\begin_layout Subsection
Anwendungen und Grundlagen
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
Perfektes-Matching-Problem in bipartiten Graphen
\end_layout

\begin_layout Plain Layout
Sei 
\begin_inset Formula $K_{n,n}$
\end_inset

 der vollständige bipartite Graph mit jeweils 
\begin_inset Formula $n$
\end_inset

 Knoten in den zwei Teilmengen 
\begin_inset Formula $V_{1}$
\end_inset

 und 
\begin_inset Formula $V_{2}$
\end_inset

 mit 
\begin_inset Formula $V_{1}\cup V_{2}=V$
\end_inset

 und Kantengewichten 
\begin_inset Formula $c_{ij}$
\end_inset

 für 
\begin_inset Formula $i\in V_{1}$
\end_inset

 und 
\begin_inset Formula $j\in V_{2}$
\end_inset

.
 Gesucht ist ein perfektes Matching 
\begin_inset Formula $\left(\forall v\in V:\left|\delta\left(v\right)\right|=1\right)$
\end_inset

 in 
\begin_inset Formula $K_{n,n}$
\end_inset

 mit minimalem Gesamtgewicht.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
Das Problem wird mit Hilfe linearer Programmierung gelöst werden.
 Es lässt sich wie folgt als lineares Programm darstellen:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\begin{aligned}\text{(AP)} & \begin{aligned} & \min & \sum_{i=1}^{n} & \sum_{j=1}^{n}c_{ij}x_{ij}\\
 &  & \sum_{j=1}^{n} & x_{ij}=1\text{, für }i=1,2,\ldots,n\\
 &  & \sum_{i=1}^{n} & x_{ij}=1\text{, für }j=1,2,\ldots,n\\
 &  &  & x_{ij}\in\left\{ 0,1\right\} \text{, für }i=1,2,\ldots,n\text{, }j=1,2,\ldots,n
\end{aligned}
\end{aligned}
\]

\end_inset


\end_layout

\begin_layout Standard
Das duale Programm dazu ist:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\begin{aligned}\text{(AP}_{D}\text{)} & \begin{alignedat}{1}\max & \sum_{i=1}^{n}u_{i}+\sum_{j=1}^{n}v_{j}\\
 & u_{i}+v_{j}\leq c_{ij}\text{, für }1,2,\ldots,n\text{, }j=1,2,\ldots n.
\end{alignedat}
\end{aligned}
\]

\end_inset


\end_layout

\begin_layout Proposition*
Schwacher Dualitätssatz (am Beispiel)
\end_layout

\begin_layout Proposition*
Wenn 
\begin_inset Formula $x$
\end_inset

 zulässig für (AP) ist und 
\begin_inset Formula $\left(u,v\right)$
\end_inset

 zulässig für (AP
\begin_inset Formula $_{D}$
\end_inset

) sind, gilt: 
\end_layout

\begin_layout Proposition*
\begin_inset Formula 
\[
\sum_{i=1}^{n}\sum_{j=1}^{n}c_{ij}x_{ij}\geq\sum_{i=1}^{n}u_{i}+\sum_{j=1}^{n}v_{j}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Proposition*
Satz vom komplenetären Schlupf (am Bsp.)
\end_layout

\begin_layout Proposition*
Ein Paar von zulässigen Lösungen 
\begin_inset Formula $x$
\end_inset

 für (AP) und 
\begin_inset Formula $\left(u,v\right)$
\end_inset

 für (AP
\begin_inset Formula $_{D}$
\end_inset

) sind genau dann optimal, wenn gilt
\end_layout

\begin_layout Proposition*
\begin_inset Formula 
\[
u_{i}+v_{j}<c_{ij}\Rightarrow x_{ij}=0
\]

\end_inset


\end_layout

\begin_layout Proposition*
bzw.
\end_layout

\begin_layout Proposition*
\begin_inset Formula 
\[
x_{ij}>0\Rightarrow u_{i}+v_{j}=c_{ij}
\]

\end_inset


\end_layout

\begin_layout Subsection
Die Ungarische Methode
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "HungarianMethod"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
HungarianMethod
\series default

\begin_inset Formula $\left(n,C\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Bestimme eine dual zulässige Startlösung 
\begin_inset Formula $\left(u^{0},v^{0}\right)$
\end_inset

, setze 
\begin_inset Formula $i=0$
\end_inset

.
\end_layout

\begin_layout Enumerate
Konstruiere zu 
\begin_inset Formula $\left(u^{i},v^{i}\right)$
\end_inset

 einen 0/1-Vektor 
\begin_inset Formula $x^{i}$
\end_inset

, so dass die Bedingungen vom komplementären Schlupf erfüllt sind.
\end_layout

\begin_layout Enumerate
Beschreibt 
\begin_inset Formula $x^{i}$
\end_inset

 eine Zuordnung, 
\emph on
Stop
\emph default
(
\begin_inset Quotes gld
\end_inset

Zuordnung optimal
\begin_inset Quotes grd
\end_inset

)
\end_layout

\begin_layout Enumerate
Berechne eine neue dual zulässige Lösung 
\begin_inset Formula $\left(u^{i+1},v^{i+1}\right)$
\end_inset

, setze 
\begin_inset Formula $i=i+1$
\end_inset

, gehe zu (2).
\end_layout

\end_inset


\end_layout

\begin_layout Standard
(Dies ist die grobe Idee des Algorithmus)
\end_layout

\begin_layout Definition
Folgende Definitionen werden für die Methode benötigt:
\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
a) Für eine dual zulässige Lösung 
\begin_inset Formula $\left(u,v\right)$
\end_inset

 heißt die Matrix 
\begin_inset Formula $\overline{C}=\left(\overline{c}_{ij}\right)$
\end_inset

 mit 
\begin_inset Formula $\overline{c}_{ij}=c_{ij}-u_{i}-v_{j}$
\end_inset

 die 
\series bold
reduzierte Matrix
\series default
.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
b) Sei 
\begin_inset Formula $\overline{C}$
\end_inset

 eine reduzierte Matrix.
 eine Menge 
\begin_inset Formula $N\subseteq\left\{ 1,\ldots,n\right\} \times\left\{ 1,\ldots,n\right\} $
\end_inset

 heißt Menge von 
\series bold
unabhängigen Nullen
\series default
, falls
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Formula $\overline{c}_{ij}=0$
\end_inset

, für alle 
\begin_inset Formula $\left(i,j\right)\in N$
\end_inset

,
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\left|\left\{ j|\left(i,j\right)\in N\right\} \right|\leq1$
\end_inset

, für alle 
\begin_inset Formula $i=1,\ldots,n$
\end_inset

,
\end_layout

\begin_layout Enumerate
\begin_inset Formula $\left|\left\{ i|\left(i,j\right)\in N\right\} \right|\leq1$
\end_inset

, für alle 
\begin_inset Formula $j=1,\ldots,n$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
c) Eine 
\series bold
Überdeckung 
\series default
einer reduzierten Matrix ist eine Menge von Zeilen- und Spaltenindizes,
 so dass die zugehörigen Zeilen und Spalten sämtliche Nullelemente von 
\begin_inset Formula $\overline{C}$
\end_inset

 enthalten.
\end_layout

\end_deeper
\begin_layout Proposition
Sei 
\begin_inset Formula $\overline{C}$
\end_inset

 eine reduzierte Matrix.
 Die maximale Kardinalität einer Menge von unabhängigen Nullen ist gleich
 der minimalen Kardinalität einer Überdeckung.
\end_layout

\begin_layout Proposition
(In einem bipartiten Graphen ist die maximale Kardinalität eines Matchings
 gleich der minimalen Kardinalität einer Kantenüberdeckung mit Knoten.)
\end_layout

\begin_layout Subsubsection
Bestimmung einer Startlösung
\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
Start
\series default

\begin_inset Formula $\left(n,C\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Berechne Zeilenminima 
\begin_inset Formula $u_{i}=\min\left\{ c_{ij}|j=1,\ldots,n\right\} $
\end_inset

, für alle 
\begin_inset Formula $i=1,\ldots,n$
\end_inset

.
\end_layout

\begin_layout Enumerate
Setze 
\begin_inset Formula $\overline{c}_{ij}=c_{ij}-u_{i}$
\end_inset

, für alle 
\begin_inset Formula $i=1,\ldots,n$
\end_inset

, 
\begin_inset Formula $j=1,\ldots,n$
\end_inset

.
\end_layout

\begin_layout Enumerate
Berechne Spaltenminima 
\begin_inset Formula $v_{j}=\min\left\{ c_{ij}|i=1,\ldots,n\right\} $
\end_inset

, für alle 
\begin_inset Formula $j=1,\ldots,n$
\end_inset

.
\end_layout

\begin_layout Enumerate
Setze 
\begin_inset Formula $\overline{c}_{ij}=\overline{c}_{ij}-v_{j}$
\end_inset

, für alle 
\begin_inset Formula $i=1,\ldots,n$
\end_inset

, 
\begin_inset Formula $j=1,\ldots,n$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Wir gehen nun spaltenweise vor und zeichnen die Null mit dem niedrigsten
 Zeilenindex als unabhängige Null aus.
\end_layout

\begin_layout Subsubsection
Bestimmung einer minimalen Überdeckung
\end_layout

\begin_layout Standard

\series bold
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
MinimusCover
\series default

\begin_inset Formula $\left(n,\overline{C}\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Alle Zeilen und Spalten von 
\begin_inset Formula $\overline{C}$
\end_inset

 seien unmarkiert und nicht überprüft.
 Sind 
\begin_inset Formula $n$
\end_inset

 unabhängige Nullen vorhanden gehe zu (5).
\end_layout

\begin_layout Enumerate
Alle Zeilen ohne unabhängige Null erhalten die Markierung 
\begin_inset Quotes gld
\end_inset

(
\begin_inset Formula $-$
\end_inset

)
\begin_inset Quotes grd
\end_inset

.
\end_layout

\begin_layout Enumerate
Sei 
\begin_inset Formula $i$
\end_inset

 eine markierte, noch nicht überprüfte Zeile.
\begin_inset Newline newline
\end_inset

Gibt es keine solche Zeile, so gehe zu (4).
\end_layout

\begin_deeper
\begin_layout Enumerate
Erkläre 
\begin_inset Formula $i$
\end_inset

 für überprüft.
\end_layout

\begin_layout Enumerate
Sei 
\begin_inset Formula $j$
\end_inset

 eine unmarkierte Spalte, die in Zeile 
\begin_inset Formula $i$
\end_inset

 eine Null enthält.
\begin_inset Newline newline
\end_inset

Gibt es keine solche Spalte, gehe zu (3).
\end_layout

\begin_layout Enumerate
Markiere 
\begin_inset Formula $j$
\end_inset

 mit 
\begin_inset Quotes gld
\end_inset

(i)
\begin_inset Quotes grd
\end_inset

.
\end_layout

\begin_layout Enumerate
Besitzt 
\begin_inset Formula $j$
\end_inset

 schon eine unabhängige Null gehe zu (3.2).
\begin_inset Newline newline
\end_inset

Andernfalls kann durch Verfolgen der Markierungen ausgehend von 
\begin_inset Formula $j$
\end_inset

 eine alternierende Kette von abhängigen und unabhänigen Nullen konstruiert
 werden.
 Ändere die Klassifizierung dieser Nullen und gehe zu (1).
\end_layout

\end_deeper
\begin_layout Enumerate
Sei 
\begin_inset Formula $j$
\end_inset

 eine markierte, noch nicht überprüfte Spalte.
\begin_inset Newline newline
\end_inset

Gibt es keine solche Spalte, so gehe zu (5).
\end_layout

\begin_deeper
\begin_layout Enumerate
Erkläre 
\begin_inset Formula $j$
\end_inset

 für überprüft.
\end_layout

\begin_layout Enumerate
Markiere die Zeile, in der die unabhängige Null von Spalte 
\begin_inset Formula $j$
\end_inset

 steht, mit 
\begin_inset Quotes gld
\end_inset

(j)
\begin_inset Quotes grd
\end_inset

.
\end_layout

\begin_layout Enumerate
Gehe zu (3).
\end_layout

\end_deeper
\begin_layout Enumerate
Die Maximalzahl unabhängiger Nullen ist berechnet.
 Die zugehörige minimale Überdeckung ergibt sich durch Zeilen, die nicht
 markiert sind und Spalten, die markiert sind.
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Korrektur der Duallösung
\end_layout

\begin_layout Standard
\begin_inset Formula $I$
\end_inset

 bezeichnet die Indizes der Zeilen der minimalen Überdeckung, 
\begin_inset Formula $J$
\end_inset

 die der Spalten.
\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
DualUpdate
\series default

\begin_inset Formula $\left(n,\overline{C},I,J\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Setze 
\begin_inset Formula $\delta=\min\left\{ \overline{c}_{ij}|i\notin I\wedge j\notin J\right\} $
\end_inset

.
\end_layout

\begin_layout Enumerate
Setze 
\begin_inset Formula $\begin{aligned}u_{i}=\begin{cases}
u_{i}+\delta\text{,} & \text{für }i\notin I\text{,}\\
u_{i} & \text{sonst,}
\end{cases} & \;\;\;\; & v_{j}=\begin{cases}
v_{j}-\delta\text{,} & \text{für }j\notin J\text{,}\\
v_{j} & \text{sonst.}
\end{cases}\end{aligned}
$
\end_inset


\end_layout

\begin_layout Enumerate
Setze 
\begin_inset Formula $\overline{c}_{ij}=\begin{cases}
\overline{c}_{ij}-\delta\text{,} & \text{für }i\notin I,j\notin J\text{,}\\
\overline{c}_{ij}+\delta\text{,} & \text{für }i\in I,j\in J\text{,}\\
\overline{c}_{ij}, & \text{sonst.}
\end{cases}$
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Proposition
Die Ungarische Methode löst Zuordnungsprobleme in der Zeit 
\begin_inset Formula $\mathcal{O}\left(n^{3}\right)$
\end_inset

.
\end_layout

\begin_layout Subsection
Ein dualer Algorithmus
\end_layout

\begin_layout Standard
Im Folgenden werden diese Notationen genutzt:
\end_layout

\begin_layout Itemize
\begin_inset Formula $w_{ij}=c_{ij}-u_{i}-v_{j}$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $I=\left\{ 1,2,\ldots,n\right\} $
\end_inset

 ist die Menge der Zeilenknoten
\end_layout

\begin_layout Itemize
\begin_inset Formula $J=\left\{ 1,2,\ldots,n\right\} $
\end_inset

 ist die Menge der Spaltenknoten
\end_layout

\begin_layout Itemize
\begin_inset Formula $G\left(I,J\right)$
\end_inset

 ist der vollständige, bipartite Graph mit Kantenmenge 
\begin_inset Formula $\left\{ \left(i,j\right)|i\in I,j\in J\right\} $
\end_inset

.
\end_layout

\begin_layout Definition
Sei 
\begin_inset Formula $F$
\end_inset

 ein Subgraph von 
\begin_inset Formula $G\left(I,J\right)$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
a) 
\begin_inset Formula $F$
\end_inset

 heißt dual zulässig, falls es einen dual zulässigen Vektor 
\begin_inset Formula $\left(u,v\right)$
\end_inset

 gibt, so dass 
\begin_inset Formula $w_{ij}=0$
\end_inset

, für alle 
\begin_inset Formula $\left(i,j\right)\in F$
\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
b) 
\begin_inset Formula $F$
\end_inset

 heißt primal zulässig, falls es einen primal zulässigen Vektor 
\begin_inset Formula $x$
\end_inset

 gibt, so dass 
\begin_inset Formula $x_{ij}=0$
\end_inset

, für alle 
\begin_inset Formula $\left(i,j\right)\in F$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Lemma
Ist 
\begin_inset Formula $F$
\end_inset

 ein primal und dual zulässiger Subgraph von 
\begin_inset Formula $G\left(I,J\right)$
\end_inset

, dann sind die zugehörigen Vektoren 
\begin_inset Formula $\left(u,v\right)$
\end_inset

 und 
\begin_inset Formula $x$
\end_inset

 optimal für (AP) bzw.
 (AP
\begin_inset Formula $_{D}$
\end_inset

).
\end_layout

\begin_layout Definition*
Sei 
\begin_inset Formula $F$
\end_inset

 ein Subgraph von 
\begin_inset Formula $G\left(I,J\right)$
\end_inset

.
 Ein Knoten hat 
\series bold
Valenz
\series default
 
\begin_inset Formula $d$
\end_inset

 (bzgl.
 F), falls sein Knotengrad in F gleich 
\begin_inset Formula $d$
\end_inset

 ist.
\end_layout

\begin_layout Definition
Ein Subgraph 
\begin_inset Formula $F$
\end_inset

 von 
\begin_inset Formula $G\left(I,J\right)$
\end_inset

 heißt 
\series bold
Superwald
\series default
 mit einer Menge von Wurzeln aus 
\begin_inset Formula $J$
\end_inset

, falls gilt:
\end_layout

\begin_layout Itemize
\begin_inset Formula $F$
\end_inset

 ist ein aufspannender Wald
\end_layout

\begin_layout Itemize
Jede Komponente von 
\begin_inset Formula $F$
\end_inset

 enthält genau eine Wurzel
\end_layout

\begin_layout Itemize
Jeder Knoten aus J, der keine Wurzel ist, hat Valenz 2.
\end_layout

\begin_layout Definition*
Ein Superwald 
\begin_inset Formula $F$
\end_inset

 lässt sich in den 
\series bold
Überschuss-Wald
\series default
 
\begin_inset Formula $F^{S}$
\end_inset

 und den 
\series bold
Defizit-Wald
\series default
 
\begin_inset Formula $F^{D}$
\end_inset

 partitionieren, mit
\end_layout

\begin_layout Definition*
\begin_inset Formula $F^{S}=\text{Vereinigung der Komponenten von \ensuremath{F}, deren Wurzeln Valenz \ensuremath{\geq2} haben,}$
\end_inset


\end_layout

\begin_layout Definition*
\begin_inset Formula $F^{D}=\text{Vereinigung der Komponenten von \ensuremath{F}, deren Wurzeln Valenz \ensuremath{0} oder \ensuremath{1} haben.}$
\end_inset


\end_layout

\begin_layout Lemma
Ist 
\begin_inset Formula $F$
\end_inset

 dual zulässiger Superwald mit 
\begin_inset Formula $F^{S}=\emptyset$
\end_inset

, dann ist der zugehörige Vektor 
\begin_inset Formula $\left(u,v\right)$
\end_inset

 eine Optimallösung von (AP
\begin_inset Formula $_{D}$
\end_inset

) und 
\begin_inset Formula $F$
\end_inset

 enthält eine optimale Zuordnung.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "AKP"

\end_inset


\end_layout

\begin_layout Lemma
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
\shape italic
AKP
\series default

\begin_inset Formula $\left(C\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Bestimme einen dual zulässigen Superwald 
\begin_inset Formula $F_{0}$
\end_inset

 mit Dualvariablen 
\begin_inset Formula $\left(u^{0},v^{0}\right)$
\end_inset

 und setze 
\begin_inset Formula $i=0$
\end_inset

.
\end_layout

\begin_layout Enumerate
Falls 
\begin_inset Formula $F_{i}$
\end_inset

 dual zulässig und 
\begin_inset Formula $F_{i}^{S}$
\end_inset

 leer ist, 
\emph on
Stop
\emph default
(
\begin_inset Quotes gld
\end_inset


\begin_inset Formula $F_{i}$
\end_inset

 enthält eine optimale Zuordnung
\begin_inset Quotes grd
\end_inset

).
\end_layout

\begin_layout Enumerate
Iteration 
\begin_inset Formula $i$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Enumerate
Bestimme eine geeignete Kante 
\begin_inset Formula $\left(g,h\right)$
\end_inset

.
\end_layout

\begin_layout Enumerate
Konstruiere mit Hilfe von 
\begin_inset Formula $\left(g,h\right)$
\end_inset

 einen neuen Superwald 
\begin_inset Formula $F_{i+1}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Berechne neue Dualvariablen 
\begin_inset Formula $\left(u^{i+1},v^{i+1}\right)$
\end_inset

.
\end_layout

\begin_layout Enumerate
Setze 
\begin_inset Formula $i=i+1$
\end_inset

 und gehe zu (2).
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Subsubsection
Bestimmung einer Startlösung
\end_layout

\begin_layout Standard
Bestimme 
\begin_inset Formula $u_{i}$
\end_inset

 und 
\begin_inset Formula $v_{j}$
\end_inset

 als Zeilen- und Spaltenminima.
 Erstelle Subgraph 
\begin_inset Formula $F=\left\{ \left(i,j\right)|w_{ij}=0\right\} $
\end_inset

.
 Entferne Kanten und zeichne Knoten aus 
\begin_inset Formula $J$
\end_inset

 als Wurzeln aus, bis 
\begin_inset Formula $F$
\end_inset

 ein Subgraph ist.
\end_layout

\begin_layout Subsubsection
Korrektur des Superwaldes
\end_layout

\begin_layout Standard
Wähle die Kante 
\begin_inset Formula $\left(g,h\right)$
\end_inset

 mit kleinstem 
\begin_inset Formula $w_{ij}$
\end_inset

, die einen 
\begin_inset Formula $I$
\end_inset

-Knoten im Überschuss-Wald und einen 
\begin_inset Formula $J$
\end_inset

-Knoten im Defizit-Wald verbindet und füge sie dem Superwald hinzu:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\delta=w_{gh}=\min\left\{ w_{ij}|i\in I\cap F_{m}^{S},j\in J\cap F_{m}^{D}\right\} 
\]

\end_inset


\end_layout

\begin_layout Standard
Die Superwald-Eigenschaft muss wiederhergestellt werden.
 Es können 4 Fälle auftreten.
\begin_inset Newline newline
\end_inset

In Fall 1 und 2 wird der Überschuss-Wald größer:
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="50text%">
<column alignment="center" valignment="top" width="50text%">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Fall 1:
\series default
 
\begin_inset Formula $h$
\end_inset

 ist eine Wurzel mit Valenz 1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Fall 2:
\series default
 
\begin_inset Formula $h$
\end_inset

 ist keine Wurzel (und hat Vater 
\begin_inset Formula $k$
\end_inset

)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename diagramme/akp_case1.svg
	lyxscale 15
	scale 17

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename diagramme/akp_case2.svg
	lyxscale 15
	scale 17

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\begin{aligned}F_{m}^{\ast}= & \text{ Komponente von \ensuremath{F_{m}}, die \ensuremath{h} enthält}\\
F_{m+1}^{D}= & F_{m}^{D}\setminus F_{m}^{\ast}\\
F_{m+1}^{S}= & F_{m}^{S}\cup F_{m}^{\ast}\cup\left\{ \left(g,h\right)\right\} 
\end{aligned}
$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\begin{aligned}F_{m}^{\ast}= & \text{ Komponente von \ensuremath{F_{m}^{D}\setminus\left\{ \left(k,h\right)\right\} }, die \ensuremath{h} enthält}\\
F_{m+1}^{D}= & F_{m}^{D}\setminus\left(F_{m}^{\ast}\cup\left\{ \left(k,h\right)\right\} \right)\\
F_{m+1}^{S}= & F_{m}^{S}\cup\left(F_{m}^{\ast}\cup\left\{ \left(g,h\right)\right\} \right)
\end{aligned}
$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
In Fall 3 und 4 wird der Überschuss-Wald kleiner:
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="50text%">
<column alignment="center" valignment="top" width="50text%">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Fall 3:
\series default
 
\begin_inset Formula $h$
\end_inset

 ist isolierte Wurzel und die Wurzel 
\begin_inset Formula $j$
\end_inset

 der Komponente von 
\begin_inset Formula $g$
\end_inset

 hat Valenz 2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Fall 4:
\series default
 
\begin_inset Formula $h$
\end_inset

 ist isolierte Wurzel und die Wurzel 
\begin_inset Formula $j$
\end_inset

 der Komponente von 
\begin_inset Formula $g$
\end_inset

 hat Valenz >2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename diagramme/akp_case3.svg
	lyxscale 15
	scale 17

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Graphics
	filename diagramme/akp_case4.svg
	lyxscale 15
	scale 17

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\begin{aligned}F_{m}^{\ast}= & \text{ Komponente von \ensuremath{F_{m}^{S}}, die \ensuremath{g} enthält}\\
F_{m+1}^{D}= & F_{m}^{D}\cup F_{m}^{\ast}\cup\left\{ \left(g,h\right)\right\} \\
F_{m+1}^{S}= & F_{m}^{S}\setminus F_{m}^{\ast}
\end{aligned}
$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\begin{aligned}F_{m}^{\ast}= & \text{ Komponente von \ensuremath{F_{m}^{S}\setminus\left\{ \left(j,i\right)\right\} }, die \ensuremath{g} enthält,}\\
 & \text{mit \ensuremath{i} als Sohn von \ensuremath{j} im Ast der \ensuremath{g} enthält}\\
F_{m+1}^{D}= & F_{m}^{D}\cup F_{m}^{\ast}\cup\left\{ \left(g,h\right)\right\} \\
F_{m+1}^{S}= & F_{m}^{S}\setminus\left(F_{m}^{\ast}\cup\left\{ \left(j,i\right)\right\} \right)
\end{aligned}
$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsubsection
Korrektur der Dualvariablen
\end_layout

\begin_layout Standard
\begin_inset Formula $F_{m}^{\ast}$
\end_inset

 ist anschaulich die Komponente, die 
\begin_inset Quotes gld
\end_inset

umgehängt
\begin_inset Quotes grd
\end_inset

 wurde.
\end_layout

\begin_layout Standard
Ist Fall 1 oder 2 eingetreten, gilt:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
u_{i}=\begin{cases}
u_{i}-\delta, & \text{falls }i\in F_{m}^{\ast}\\
u_{i} & \text{sonst,}
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
v_{j}=\begin{cases}
v_{j}+\delta, & \text{falls }j\in F_{m}^{\ast}\\
v_{j} & \text{sonst.}
\end{cases}
\]

\end_inset


\end_layout

\begin_layout Standard
In Fall 3 und 4 sind 
\begin_inset Formula $+$
\end_inset

 und 
\begin_inset Formula $-$
\end_inset

 vertauscht.
\end_layout

\begin_layout Lemma
Falls die Teilwälder 
\begin_inset Formula $F_{m}^{D}$
\end_inset

 und 
\begin_inset Formula $F_{m}^{S}$
\end_inset

 dual zulässig sind, dann gilt 
\begin_inset Formula $\delta_{m+1}\geq\delta_{m}$
\end_inset

 und 
\begin_inset Formula $\delta_{m+1}\geq$
\end_inset

-
\begin_inset Formula $\delta_{m}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Lemma
Falls 
\begin_inset Formula $F_{m}^{D}$
\end_inset

 und 
\begin_inset Formula $F_{m}^{S}$
\end_inset

 dual zulässig sind, dann auch 
\begin_inset Formula $F_{m+1}^{D}$
\end_inset

 und 
\begin_inset Formula $F_{m+1}^{S}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Proposition
Der AKP-Algorithmus arbeitet korrekt und löst das Zuordnungsproblem mit
 Zeitkomplexität 
\begin_inset Formula $\mathcal{O}\left(n^{3}\right)$
\end_inset

.
\end_layout

\begin_layout Section
Maximale Flüsse und minimale Schnitte
\end_layout

\begin_layout Definition*
Ein 
\series bold
Flussnetzwerk
\series default
 ist ein Digraph 
\begin_inset Formula $D=\left(V,A\right)$
\end_inset

 mit Kantenkapazitäten 
\begin_inset Formula $c\left(u,v\right)\geq0$
\end_inset

 für alle Kanten 
\begin_inset Formula $\left(u,v\right)$
\end_inset

, einer 
\series bold
Quelle
\series default
 
\begin_inset Formula $s\in V$
\end_inset

 und einer 
\series bold
Senke
\series default
 
\begin_inset Formula $t\in V$
\end_inset

.
 
\begin_inset Formula $D$
\end_inset

 ist zusammenhängend und für jeden Knoten 
\begin_inset Formula $v\in V$
\end_inset

 existiert ein 
\begin_inset Formula $\left(s,v\right)$
\end_inset

-Weg so wie ein 
\begin_inset Formula $\left(v,t\right)$
\end_inset

-Weg.
\end_layout

\begin_layout Definition
Ein 
\series bold

\begin_inset Formula $\left(s,t\right)$
\end_inset

-Fluss
\series default
 in 
\begin_inset Formula $D$
\end_inset

 ist eine Funktion 
\begin_inset Formula $f:V\times V\rightarrow\mathbb{R}$
\end_inset

 mit den Eigenschaften
\end_layout

\begin_layout Definition
\begin_inset Formula $\begin{aligned}f\left(u,v\right)\leq & c\left(u,v\right)\text{, für alle }u,v\in V & \text{(Kapazitätsbeschränkung)}\\
f\left(u,v\right)= & -f\left(u,v\right)\text{, für alle }u,v\in V & \text{(Antisymmetrie)}\\
\sum_{v\in V}f\left(u,v\right)= & 0\text{, für alle }u\in V\setminus\left\{ s,t\right\}  & \text{(Flusserhaltung)}
\end{aligned}
$
\end_inset


\end_layout

\begin_layout Definition
Die Zahl 
\begin_inset Formula $f\left(u,v\right)$
\end_inset

 heißt Netto-Fluss von 
\begin_inset Formula $u$
\end_inset

 nach 
\begin_inset Formula $v$
\end_inset

.
 Der 
\series bold
Wert
\series default
 von 
\begin_inset Formula $f$
\end_inset

 ist 
\begin_inset Formula $\left|f\right|:=\sum_{v\in V}f\left(s,v\right)$
\end_inset

.
\end_layout

\begin_layout Definition
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
Maximaler-
\begin_inset Formula $\left(s,t\right)$
\end_inset

-Fluss-Problem
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Plain Layout
Gegeben sind ein Digraph 
\begin_inset Formula $D=\left(V,A\right)$
\end_inset

 mit Kantenkapazitäten und zwei Knoten 
\begin_inset Formula $s,t\in V$
\end_inset

.
 Zu bestimmen ist ein 
\begin_inset Formula $\left(s,t\right)$
\end_inset

-Fluss maximalen Werts.
\end_layout

\end_inset


\end_layout

\begin_layout Definition
Für 
\begin_inset Formula $\left(u,v\right)\notin A$
\end_inset

 setzen wir 
\begin_inset Formula $c\left(u,v\right)=0$
\end_inset

.
\end_layout

\begin_layout Definition
Der 
\series bold
positive Nettofluss
\series default
 in einen Knoten 
\begin_inset Formula $v$
\end_inset

 ist definiert als 
\begin_inset Formula 
\[
\sum_{\substack{u\in V\\
f\left(u,v\right)>0
}
}f\left(u,v\right)
\]

\end_inset


\end_layout

\begin_layout Definition
Der positive Nettofluss 
\emph on
aus
\emph default
 einem Knoten ist analog.
\end_layout

\begin_layout Definition
Für Knotenmengen 
\begin_inset Formula $X$
\end_inset

 und 
\begin_inset Formula $Y$
\end_inset

 gilt die Kurzschreibweise
\end_layout

\begin_layout Definition
\begin_inset Formula 
\[
f\left(X,Y\right)=\sum_{x\in X}\sum_{y\in Y}f\left(x,y\right)
\]

\end_inset


\end_layout

\begin_layout Lemma
Sei 
\begin_inset Formula $D$
\end_inset

 ein Netzwerk und 
\begin_inset Formula $f$
\end_inset

 ein Fluss.
\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
a) Für 
\begin_inset Formula $X\subseteq V$
\end_inset

 gilt 
\begin_inset Formula $f\left(X,X\right)=0$
\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
b) Für 
\begin_inset Formula $X,Y\subseteq V$
\end_inset

 gilt 
\begin_inset Formula $f\left(X,Y\right)=-f\left(Y,X\right)$
\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
c) Für 
\begin_inset Formula $X,Y,Z\subseteq V$
\end_inset

 mit 
\begin_inset Formula $X\cap Y=\emptyset$
\end_inset

 gilt 
\begin_inset Formula $f\left(X\cup Y,Z\right)=f\left(X,Z\right)+f\left(Y,Z\right)$
\end_inset

 und 
\begin_inset Formula $f\left(Z,X\cup Y\right)=f\left(Z,X\right)+f\left(Z,Y\right)$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Subsection
Der Algorithmus von Ford und Fulkerson
\end_layout

\begin_layout Definition*
Die 
\series bold
Restkapazität
\series default
 ist definiert als 
\begin_inset Formula $c_{f}\left(u,v\right)=c\left(u,v\right)-f\left(u,v\right)$
\end_inset

.
 Das 
\series bold
reduzierte Netzwerk
\series default
 
\begin_inset Formula $D_{f}=\left(V,A_{f}\right)$
\end_inset

 mit 
\begin_inset Formula $A_{f}=\left\{ \left(u,v\right)\in V\times V|c_{f}\left(u,v\right)>0\right\} $
\end_inset

 enthält die möglichen, zusätzlichen Nettoflüsse.
\end_layout

\begin_layout Lemma
Sei 
\begin_inset Formula $D$
\end_inset

 ein Netzwerk mit 
\begin_inset Formula $\left(s,t\right)$
\end_inset

-Fluss 
\begin_inset Formula $f$
\end_inset

.
 
\begin_inset Formula $D_{f}$
\end_inset

 sei das zugehörige reduzierte Netzwerk und 
\begin_inset Formula $f^{\prime}$
\end_inset

 sei ein 
\begin_inset Formula $\left(s,t\right)$
\end_inset

-Fluss in 
\begin_inset Formula $D_{f}$
\end_inset

.
 Dann ist 
\begin_inset Formula $\overline{f}$
\end_inset

 definiert durch 
\begin_inset Formula $\overline{f}\left(u,v\right)=f\left(u,v\right)+f^{\prime}\left(u,v\right)$
\end_inset

 ein 
\begin_inset Formula $\left(s,t\right)$
\end_inset

-Fluss in 
\begin_inset Formula $D$
\end_inset

 mit Wert 
\begin_inset Formula $\left|f\right|+\left|f^{\prime}\right|$
\end_inset

.
\end_layout

\begin_layout Definition*
Ein einfacher 
\begin_inset Formula $\left(s,t\right)$
\end_inset

-Weg in 
\begin_inset Formula $D_{f}$
\end_inset

 heißt 
\series bold
augmentierender Weg
\series default
 
\begin_inset Formula $P$
\end_inset

 mit 
\series bold
Restkapazität
\series default
 
\begin_inset Formula $c_{f}\left(P\right)=\min\left\{ c_{f}\left(u,v\right)|\left(u,v\right)\in P\right\} $
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Definition*
Ein 
\series bold

\begin_inset Formula $\left(s,t\right)$
\end_inset

-Schnitt
\series default
 
\begin_inset Formula $\left(S:T\right)$
\end_inset

 ist eine Partition von 
\begin_inset Formula $V$
\end_inset

 in 
\begin_inset Formula $S$
\end_inset

 und 
\begin_inset Formula $T=V\setminus S$
\end_inset

, wobei 
\begin_inset Formula $s\in S$
\end_inset

 und 
\begin_inset Formula $t\in T.$
\end_inset

 Der 
\series bold
Nettofluss über dem Schnitt
\series default
 
\begin_inset Formula $\left(S:T\right)$
\end_inset

 ist definiert als 
\begin_inset Formula $f\left(S,T\right)$
\end_inset

.
 Seine Kapazität ist 
\begin_inset Formula $c\left(S:T\right)={\displaystyle \sum_{u\in S}\sum_{v\in T}c\left(u,v\right)}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
Minimaler-
\begin_inset Formula $\left(s,t\right)$
\end_inset

-Schnitt-Problem
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Plain Layout
Gegeben sind ein Digraph 
\begin_inset Formula $D=\left(V,A\right)$
\end_inset

 mit Kantenkapazitäten und zwei Knoten 
\begin_inset Formula $s,t\in V$
\end_inset

.
 Zu bestimmen ist ein 
\begin_inset Formula $\left(s,t\right)$
\end_inset

-Schnitt minimaler Kapazität.
\end_layout

\end_inset


\end_layout

\begin_layout Lemma
Seien 
\begin_inset Formula $f$
\end_inset

 ein 
\begin_inset Formula $\left(s,t\right)$
\end_inset

-Fluss 
\begin_inset Formula $D$
\end_inset

 und 
\begin_inset Formula $\left(S:T\right)$
\end_inset

 ein 
\begin_inset Formula $\left(s,t\right)$
\end_inset

-Schnitt.
 Dann gelten:
\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
a) 
\begin_inset Formula $f\left(S,T\right)=\left|f\right|$
\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
b) 
\begin_inset Formula $\left|f\right|\leq c\left(S:T\right)$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Proposition

\series bold
(Max-Flow-Min-Cut-Theorem)
\end_layout

\begin_layout Proposition
Sei 
\begin_inset Formula $f$
\end_inset

 ein 
\begin_inset Formula $\left(s,t\right)$
\end_inset

-Fluss in 
\begin_inset Formula $D$
\end_inset

.
 Die folgenden Aussagen sind äquivalent:
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $f$
\end_inset

 ist maximaler Fluss.
\end_layout

\begin_layout Itemize
Das reduzierte Netzwerk enthält keinen augmentierenden Weg.
\end_layout

\begin_layout Itemize
Es gibt einen Schnitt 
\begin_inset Formula $\left(S:T\right)$
\end_inset

 mit 
\begin_inset Formula $c\left(S:T\right)=\left|f\right|$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "FordFulkerson"

\end_inset


\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
FordFulkerson
\series default

\begin_inset Formula $\left(D,c,s,t\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Für alle 
\begin_inset Formula $\left(u,v\right)\in A$
\end_inset

 setze 
\begin_inset Formula $f\left[u,v\right]=f\left[v,u\right]=0$
\end_inset

.
\end_layout

\begin_layout Enumerate
Konstruiere das reduzierte Netzwerk 
\begin_inset Formula $D_{f}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Falls kein augmentierender 
\begin_inset Formula $\left(s,t\right)$
\end_inset

-Weg existiert, 
\emph on
Stop
\emph default
(
\begin_inset Quotes gld
\end_inset


\begin_inset Formula $f$
\end_inset

 ist maximal
\begin_inset Quotes grd
\end_inset

), andernfalls sei 
\begin_inset Formula $P$
\end_inset

 ein solcher Weg mit Restkapazität 
\begin_inset Formula $c_{f}\left(P\right)$
\end_inset

.
\end_layout

\begin_layout Enumerate
Für jede Kante 
\begin_inset Formula $\left(u,v\right)$
\end_inset

 des Weges 
\begin_inset Formula $P$
\end_inset

 setze 
\begin_inset Formula $f\left[u,v\right]=f\left[u,v\right]+c_{f}\left(P\right)$
\end_inset

 und 
\begin_inset Formula $f\left[v,u\right]=-f\left[u,v\right]$
\end_inset

.
\end_layout

\begin_layout Enumerate
Gehe zu (2).
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Laufzeit: 
\begin_inset Formula $\mathcal{O}\left(A\left|f^{\ast}\right|\right)$
\end_inset

 -> nicht poly!
\end_layout

\begin_layout Standard
Ein minimaler Schnitt wird gleich mitgeliefert.
 Eine Seite sind alle Knoten, zu denen kein augmentierender Weg mehr gefunden
 werden kann.
\end_layout

\begin_layout Corollary
Wenn alle Kapazitäten ganzzahlig sind, dann existiert ein ganzzahliger maximaler
 Fluss.
\end_layout

\begin_layout Proposition
Sei 
\begin_inset Formula $f$
\end_inset

 ein 
\begin_inset Formula $\left(s,t\right)$
\end_inset

-Fluss in 
\begin_inset Formula $D$
\end_inset

.
 Dann gibt es eine Familie von 
\begin_inset Formula $\left(s,t\right)$
\end_inset

-Wegen 
\begin_inset Formula $\mathcal{P}$
\end_inset

 und (gerichteten) Kreisen 
\begin_inset Formula $\mathcal{C}$
\end_inset

 in 
\begin_inset Formula $D$
\end_inset

 mit Gewichten 
\begin_inset Formula $w_{P},P\in\mathcal{P}$
\end_inset

, und 
\begin_inset Formula $w_{C},C\in\mathcal{C}$
\end_inset

, so dass
\begin_inset Formula 
\[
f\left(u,v\right)=\sum_{P\in\mathcal{P}}\sum_{\left(u,v\right)\in P}w_{P}+\sum_{C\in\mathcal{C}}\sum_{\left(u,v\right)\in C}w_{C}
\]

\end_inset


\end_layout

\begin_layout Subsection
Der Satz von Menger
\end_layout

\begin_layout Standard
(Dieses Kapitel zeigt, wie toll man einige Dinge mit Flüssen beweisen kann
 und 
\emph on
ergibt
\emph default
 ohne die Beweise leider nicht viel Sinn.)
\end_layout

\begin_layout Proposition
Seien 
\begin_inset Formula $D=\left(V,A\right)$
\end_inset

 ein gerichteter Graph und 
\begin_inset Formula $s,t$
\end_inset

 zwei Knoten in 
\begin_inset Formula $V$
\end_inset

.
 Für 
\begin_inset Formula $k\geq1$
\end_inset

 gibt es 
\begin_inset Formula $k$
\end_inset

 kantendisjunkte 
\begin_inset Formula $\left(s,t\right)$
\end_inset

-Wege genau dann, wenn es auch nach Entfernen von 
\begin_inset Formula $k-1$
\end_inset

 beliebigen Kanten noch einen Weg von 
\begin_inset Formula $s$
\end_inset

 nach 
\begin_inset Formula $t$
\end_inset

 gibt.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Proposition
Seien 
\begin_inset Formula $D=\left(V,A\right)$
\end_inset

 ein Digraph und 
\begin_inset Formula $s,t$
\end_inset

 zwei nicht benachbarte Knoten in 
\begin_inset Formula $V$
\end_inset

.
 Für 
\begin_inset Formula $k\geq1$
\end_inset

 gibt es 
\begin_inset Formula $k$
\end_inset

 intern knotendisjunkte 
\begin_inset Formula $\left(s,t\right)$
\end_inset

-Wege genau dann, wenn es auch nach Entfernen von 
\begin_inset Formula $k-1$
\end_inset

 beliebigen Knoten noch einen Weg von 
\begin_inset Formula $s$
\end_inset

 nach 
\begin_inset Formula $t$
\end_inset

 gibt.
\end_layout

\begin_layout Subsection
Der Algorithmus von Edmonds und Karp
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "EdmondsKarp"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
EdmondsKarp
\series default

\begin_inset Formula $\left(D,c,s,t\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Für alle 
\begin_inset Formula $\left(u,v\right)\in A$
\end_inset

 setze 
\begin_inset Formula $f\left[u,v\right]=f\left[v,u\right]=0$
\end_inset

.
\end_layout

\begin_layout Enumerate
Konstruiere das reduzierte Netzwerk 
\begin_inset Formula $D_{f}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Falls kein augmentierender 
\begin_inset Formula $\left(s,t\right)$
\end_inset

-Weg existiert, 
\emph on
Stop
\emph default
(
\begin_inset Quotes gld
\end_inset


\begin_inset Formula $f$
\end_inset

 ist maximal
\begin_inset Quotes grd
\end_inset

), andernfalls sei 
\begin_inset Formula $P$
\end_inset

 ein solcher Weg 
\emph on
mit möglichst wenigen Kanten
\emph default
 und Restkapazität 
\begin_inset Formula $c_{f}\left(P\right)$
\end_inset

.
\end_layout

\begin_layout Enumerate
Für jede Kante 
\begin_inset Formula $\left(u,v\right)$
\end_inset

 des Weges 
\begin_inset Formula $P$
\end_inset

 setze 
\begin_inset Formula $f\left[u,v\right]=f\left[u,v\right]+c_{f}\left(P\right)$
\end_inset

 und 
\begin_inset Formula $f\left[v,u\right]=-f\left[u,v\right]$
\end_inset

.
 Gehe zu (2).
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Laufzeit: 
\begin_inset Formula $\mathcal{O}\left(VA^{2}\right)$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\delta_{f}\left(u,v\right)$
\end_inset

 ist die Kürzeste-Wege-Distanz von 
\begin_inset Formula $u$
\end_inset

 nach 
\begin_inset Formula $v$
\end_inset

 im reduzierten Netzwerk, gemessen in Anzahl der Kanten.
\end_layout

\begin_layout Lemma
Die Edmonds-Karp-Variante werde auf das Netzwerk
\begin_inset Formula $D=\left(V,A\right)$
\end_inset

 mit Quelle 
\begin_inset Formula $s$
\end_inset

 und Senke 
\begin_inset Formula $t$
\end_inset

 angewendet.
\end_layout

\begin_layout Lemma
Dann nehmen für jeden Knoten 
\begin_inset Formula $v\in V\setminus\left\{ s,t\right\} $
\end_inset

 die Distanzen 
\begin_inset Formula $\delta_{f}\left(s,v\right)$
\end_inset

 bei jeder Augmentierung nicht ab.
\end_layout

\begin_layout Proposition
Die Edmonds-Karp-Variante führt 
\begin_inset Formula $\mathcal{O}\left(VA\right)$
\end_inset

 Augmentierungen durch.
\end_layout

\begin_layout Subsection
Die Skalierungsvariante von Ahuja und Orlin
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "ScalingMaxFlow"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
ScalingMaxFlow
\series default

\begin_inset Formula $\left(D,c,s,t\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Setze 
\begin_inset Formula $C=\max\left\{ c\left(u,v\right)|\left(u,v\right)\in A\right\} $
\end_inset

.
\end_layout

\begin_layout Enumerate
Beginne mit dem 
\begin_inset Formula $\left(s,t\right)$
\end_inset

-Fluss 
\begin_inset Formula $f\equiv0$
\end_inset

.
\end_layout

\begin_layout Enumerate
Setze 
\begin_inset Formula $K=2^{\left\lfloor \log_{2}C\right\rfloor }$
\end_inset

.
\end_layout

\begin_layout Enumerate
Solange 
\begin_inset Formula $K\geq1$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Enumerate
So lange es einen augmentierenden Weg mit Restkapazität 
\begin_inset Formula $\geq k$
\end_inset

 gibt, augmentiere 
\begin_inset Formula $f$
\end_inset

 mit Hilfe dieses Weges.
\end_layout

\begin_layout Enumerate
Setzte
\begin_inset Formula $K=K/2$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Enumerate
Der Fluss 
\begin_inset Formula $f$
\end_inset

 ist ein maximaler Fluss.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Laufzeit: 
\begin_inset Formula $\mathcal{O}\left(A^{2}\log C\right)$
\end_inset

, kann zu 
\begin_inset Formula $\mathcal{O}\left(VA\log C\right)$
\end_inset

 verbessert werden.
\end_layout

\begin_layout Lemma
Vor der Ausführung von Schritt (4.1) ist die Kapazität eines minimalen Schnitts
 im reduzierten Netzwerk höchstens 
\begin_inset Formula $2\cdot K\cdot\left|A\right|$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Lemma
Für festes 
\begin_inset Formula $K$
\end_inset

 erfolgen 
\begin_inset Formula $\mathcal{O}\left(A\right)$
\end_inset

 Augmentierungen in Schritt (4.1).
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Proposition
Der Algorithmus ScalingMaxFlow hat die Zeitkomplexität 
\begin_inset Formula $\mathcal{O}\left(A^{2}\log C\right)$
\end_inset

.
\end_layout

\begin_layout Subsection
Der Preflow-Push-Algorithmus
\end_layout

\begin_layout Definition
Ein Präfluss in einem Netzwerk 
\begin_inset Formula $D$
\end_inset

 ist eine Funktion 
\begin_inset Formula $f:V\times V\rightarrow\mathbb{R}$
\end_inset

 mit den Eigenschaften
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $f\left(u,v\right)\leq c\left(u,v\right)$
\end_inset

, für alle 
\begin_inset Formula $u,v\in V$
\end_inset

,
\end_layout

\begin_layout Itemize
\begin_inset Formula $f\left(u,v\right)=-f\left(u,v\right)$
\end_inset

, für alle 
\begin_inset Formula $u,v\in V$
\end_inset

,
\end_layout

\begin_layout Itemize
\begin_inset Formula $f\left(V,u\right)\geq0$
\end_inset

, für alle 
\begin_inset Formula $u\in V\setminus\left\{ s\right\} $
\end_inset

.
\end_layout

\end_deeper
\begin_layout Definition
Der 
\series bold
Überschuss
\series default
 von Knoten 
\begin_inset Formula $u$
\end_inset

 ist 
\begin_inset Formula $e\left(u\right)=f\left(V,u\right)$
\end_inset

.
\end_layout

\begin_layout Definition
Ein Knoten 
\begin_inset Formula $u\in V\setminus\left\{ s,t\right\} $
\end_inset

 heißt 
\series bold
aktiv
\series default
, falls 
\begin_inset Formula $e\left(u\right)>0$
\end_inset

.
\end_layout

\begin_layout Standard
(Ein Präfluss ist also ein Fluss, der statt der Flusserhaltung 
\begin_inset Quotes gld
\end_inset


\begin_inset Formula $\text{Flow-In}=\text{Flow-Out}$
\end_inset


\begin_inset Quotes grd
\end_inset

 nur die Bedingung 
\begin_inset Quotes gld
\end_inset


\begin_inset Formula $\text{Flow-In}\geq\text{Flow-Out}$
\end_inset


\begin_inset Quotes grd
\end_inset

 erfüllen muss.)
\end_layout

\begin_layout Definition
Sei 
\begin_inset Formula $D$
\end_inset

 ein Netzwerk und 
\begin_inset Formula $f$
\end_inset

 ein Präfluss.
 Eine Funktion 
\begin_inset Formula $h:V\rightarrow\mathbb{N}_{0}$
\end_inset

 heißt 
\series bold
Höhenfunktion
\series default
, falls
\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Formula $h\left(s\right)=\left|V\right|$
\end_inset

,
\end_layout

\begin_layout Itemize
\begin_inset Formula $h\left(t\right)=0$
\end_inset

,
\end_layout

\begin_layout Itemize
\begin_inset Formula $h\left(u\right)\leq h\left(v\right)+1$
\end_inset

 für jeder Kante 
\begin_inset Formula $\left(u,v\right),u\neq s$
\end_inset

, aus dem reduzierten Netzwerk 
\begin_inset Formula $D_{f}$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Lemma
Sei 
\begin_inset Formula $D$
\end_inset

 ein Netzwerk, 
\begin_inset Formula $f$
\end_inset

 ein Präfluss und 
\begin_inset Formula $h$
\end_inset

 eine Höhenfunktion.
 Falls für zwei Knoten 
\begin_inset Formula $u,v\in V$
\end_inset

 
\begin_inset Formula $h\left(u\right)>h\left(v\right)$
\end_inset

 gilt, dann ist
\begin_inset Formula $\left(u,v\right)$
\end_inset

 keine Kante des reduzierten Netzwerks.
\end_layout

\begin_layout Lemma
\begin_inset CommandInset label
LatexCommand label
name "PrefowPush"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
Push
\series default

\begin_inset Formula $\left(u,v\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Falls 
\begin_inset Formula $u$
\end_inset

 aktiv ist, 
\begin_inset Formula $h\left[u\right]=h\left[v\right]+1$
\end_inset

und 
\begin_inset Formula $c_{f}\left(u,v\right)>0$
\end_inset

, dann:
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Formula $\Delta=\min\left\{ e\left[u\right],c_{f}\left(u,v\right)\right\} $
\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $f\left[u,v\right]=f\left[u,v\right]+\Delta$
\end_inset

, 
\begin_inset Formula $f\left[v,u\right]=-f\left[u,v\right]$
\end_inset

, 
\begin_inset Formula $e\left[u\right]=e\left[u\right]-\Delta$
\end_inset

, 
\begin_inset Formula $e\left[v\right]=e\left[v\right]+\Delta$
\end_inset

.
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Standard
Eine Push-Operation ist 
\series bold
saturierend
\series default
, wenn danach 
\begin_inset Formula $c_{f}\left(u,v\right)=0$
\end_inset

 gilt, sonst 
\series bold
nicht saturierend
\series default
.
\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
Lift
\series default

\begin_inset Formula $\left(u\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Falls 
\begin_inset Formula $u$
\end_inset

 aktiv und es keine Kante 
\begin_inset Formula $\left(u,v\right)\in A_{f}$
\end_inset

 gibt mit 
\begin_inset Formula $h\left[u\right]>h\left[v\right]$
\end_inset

, dann:
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Formula $h\left[u\right]=1+\min\left\{ h\left[v\right]|\left(u,v\right)\in A_{f}\right\} $
\end_inset


\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
PreflowPush
\series default

\begin_inset Formula $\left(D,c,s,t\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Für alle 
\begin_inset Formula $v\in V$
\end_inset

 setze 
\begin_inset Formula $h\left[v\right]=0$
\end_inset

 und 
\begin_inset Formula $e\left[v\right]=0$
\end_inset

.
\end_layout

\begin_layout Enumerate
Für jede Kante 
\begin_inset Formula $\left(u,v\right)\in A$
\end_inset

 setze 
\begin_inset Formula $f\left[u,v\right]=0$
\end_inset

 und 
\begin_inset Formula $f\left[v,u\right]=0$
\end_inset

.
\end_layout

\begin_layout Enumerate
Setze 
\begin_inset Formula $h\left[s\right]=\left|V\right|$
\end_inset

.
\end_layout

\begin_layout Enumerate
Für jeden Knoten 
\begin_inset Formula $v$
\end_inset

 mit 
\begin_inset Formula $\left(s,v\right)\in A$
\end_inset

 setze 
\begin_inset Formula $f\left[s,v\right]=c\left(s,v\right)$
\end_inset

, 
\begin_inset Formula $f\left[v,s\right]=-c\left(s,v\right)$
\end_inset

 und 
\begin_inset Formula $e\left[v\right]=c\left(s,v\right)$
\end_inset

.
\end_layout

\begin_layout Enumerate
Solange eine anwendbare Push- oder Lift-Operation existiert, führe eine
 solche aus.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Laufzeit: 
\begin_inset Formula $\mathcal{O}\left(V^{2}A\right)$
\end_inset


\end_layout

\begin_layout Lemma
Sei 
\begin_inset Formula $D=\left(V,A\right)$
\end_inset

 ein Netzwerk mit Quelle 
\begin_inset Formula $s$
\end_inset

 und Senke 
\begin_inset Formula $t$
\end_inset

, 
\begin_inset Formula $f$
\end_inset

 ein Präfluss und 
\begin_inset Formula $h$
\end_inset

 eine Höhenfunktion.
 Wenn 
\begin_inset Formula $u$
\end_inset

 ein aktiver Knoten ist, dann ist Lift
\begin_inset Formula $\left(u\right)$
\end_inset

 oder Push
\begin_inset Formula $\left(u,v\right)$
\end_inset

 für ein 
\begin_inset Formula $v\in V$
\end_inset

 anwendbar.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Lemma
Während der Ausführung von Preflow-Push nehmen die Höhen der Knoten nicht
 ab.
 Ist für einen Knoten 
\begin_inset Formula $u$
\end_inset

 Lift
\begin_inset Formula $\left(u\right)$
\end_inset

 anwendbar, dann steigt die Höhe von 
\begin_inset Formula $u$
\end_inset

 um mindestens 1.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Lemma
Die Funktion 
\begin_inset Formula $h$
\end_inset

 behält während der Ausführung der Algorithmus die Eigenschaften einer Höhenfunk
tion.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Lemma
Es gibt keinen Weg von 
\begin_inset Formula $s$
\end_inset

 nach 
\begin_inset Formula $t$
\end_inset

 im reduzierten Netzwerk.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Proposition
Nach Terminierung des Algorithmus ist ein maximaler 
\begin_inset Formula $\left(s,t\right)$
\end_inset

-Fluss bestimmt.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Lemma
Sei 
\begin_inset Formula $f$
\end_inset

 ein Präfluss in 
\begin_inset Formula $D=\left(V,A\right)$
\end_inset

.
 Es gilt: Für jeden aktiven Knoten 
\begin_inset Formula $u$
\end_inset

 gibt es einen (einfachen) Weg von 
\begin_inset Formula $u$
\end_inset

 nach 
\begin_inset Formula $s$
\end_inset

 im reduzierten Netzwerk 
\begin_inset Formula $D_{f}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Lemma
Im Verlauf des Algorithmus gilt immer 
\begin_inset Formula $h\left(u\right)\leq2\cdot\left|V\right|-1$
\end_inset

, für alle 
\begin_inset Formula $u\in V$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Corollary
Für jeden Knoten wird höchstens 
\begin_inset Formula $\left(2\cdot\left|V\right|-1\right)$
\end_inset

-mal eine Lift-Operation durchgeführt.
 Die Gesamtzahl aller Lift-Operationen ist höchstens 
\begin_inset Formula $\left(2\cdot\left|V\right|-1\right)\left(\left|V\right|-2\right)<2\cdot\left|V\right|^{2}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Lemma
Die Zahl der saturierenden Push-Operationen ist höchstens 
\begin_inset Formula $2\cdot\left|V\right|\cdot\left|A\right|$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Lemma
Die Zahl der nichtsaturierenden Push-Operationen ist höchstens 
\begin_inset Formula $4\left|V\right|^{2}\cdot\left(\left|V\right|+\left|A\right|\right)$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Proposition
Die Zahl der Basis-Operationen bei der Ausführung des Preflow-Push-Algorithmus
 beträgt
\begin_inset Formula $\mathcal{O}\left(V^{2}A\right)$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Corollary
Der Preflow-Push-Algorithmus hat die Zeitkomplexität 
\begin_inset Formula $\mathcal{O}\left(V^{2}A\right)$
\end_inset

.
\end_layout

\begin_layout Paragraph
FIFO-Preflow-Push
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "FIFO-PFP"

\end_inset


\end_layout

\begin_layout Standard
Hier werden Knoten in einer Queue abgearbeitet, die mit den Nachbarn von
 L initialisiert werden.
 Das abarbeiten funktioniert mit der 
\emph on
Examine
\emph default

\begin_inset Formula $\left(u\right)$
\end_inset

-Operation:
\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
Examine
\series default

\begin_inset Formula $\left(u\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Falls 
\begin_inset Formula $u$
\end_inset

 aktiv ist, dann:
\end_layout

\begin_deeper
\begin_layout Enumerate
Solange möglich, führe Operationen 
\emph on
Push
\emph default

\begin_inset Formula $\left(u,v\right)$
\end_inset

 aus.
 Wird 
\begin_inset Formula $v$
\end_inset

 dadurch zu einem Überschussknoten, füge 
\begin_inset Formula $v$
\end_inset

 am Ende von 
\begin_inset Formula $L$
\end_inset

 ein.
\end_layout

\begin_layout Enumerate
Ist 
\emph on
Lift
\emph default

\begin_inset Formula $\left(u\right)$
\end_inset

 anwendbar, führe die Operation aus und setze 
\begin_inset Formula $u$
\end_inset

 ans Ende von 
\begin_inset Formula $L$
\end_inset

, andernfalls entferne 
\begin_inset Formula $u$
\end_inset

 aus 
\begin_inset Formula $L$
\end_inset

.
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Standard
Laufzeit: 
\begin_inset Formula $\mathcal{O}\left(V^{3}\right)$
\end_inset

 
\end_layout

\begin_layout Paragraph
Highest-Label-Preflow-Push
\end_layout

\begin_layout Standard
Bevorzuge Knoten mit dem höchsten 
\begin_inset Formula $h$
\end_inset

-Wert.
 
\begin_inset Formula $\text{Laufzeit: }\mathcal{O}\left(V^{2}\sqrt{A}\right)$
\end_inset


\end_layout

\begin_layout Subsection
Untere Schranken und Knotenkapazitäten
\end_layout

\begin_layout Subsubsection
Untere Schranken
\end_layout

\begin_layout Standard
Wenn ein 
\series bold
Mindestfluss
\series default
 gesucht ist, könnte es die Bedingung 
\begin_inset Formula $l\left(u,v\right)\leq f\left(u,v\right)\leq c\left(u,v\right)$
\end_inset

 geben.
 Dazu transformieren wir das Problem in 
\begin_inset Formula $D=\left(V,A\right)$
\end_inset

 wie folgt:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\begin{aligned}D^{\ast}= & \left(V^{\ast},A^{\ast}\right)\\
V^{\ast}= & \,V\cup\left\{ s^{\ast},t^{\ast}\right\} \\
A^{\ast}= & \,A\cup\left\{ \left(s^{\ast},v\right)|v\in V\right\} \cup\left\{ \left(v,t^{\ast}\right)|v\in V\right\} \cup\left\{ \left(t,s\right)\right\} \\
c^{\ast}\left(t,s\right)= & \,\infty\\
c^{\ast}\left(u,v\right)= & \,c\left(u,v\right)-l\left(u,v\right)\text{, für }\left(u,v\right)\in A\\
c^{\ast}\left(s^{\ast},u\right)= & \,\sum_{\left(v,u\right)\in A}l\left(v,u\right)\text{, für }u\in V\\
c^{\ast}\left(u,t^{\ast}\right)= & \,\sum_{\left(u,v\right)\in A}l\left(u,v\right)\text{, für }u\in V
\end{aligned}
\]

\end_inset


\end_layout

\begin_layout Standard
In 
\begin_inset Formula $D$
\end_inset

 existiert ein zulässiger Fluss genau dann, wenn der maximale 
\begin_inset Formula $\left(s^{\ast},t^{\ast}\right)$
\end_inset

-Fluss in 
\begin_inset Formula $D^{\ast}$
\end_inset

 den Wert 
\begin_inset Formula $f^{\ast}=\sum_{\left(u,v\right)\in A}l\left(u,v\right)$
\end_inset

 hat.
 Es gilt 
\begin_inset Formula $f\left(u,v\right)=f^{\ast}\left(u,v\right)+l\left(u,v\right)$
\end_inset

 ist ein zulässiger Fluss.
 Er kann als Startfluss für die oben genannten Max-Flow-Algorithmen genutzt
 werden.
\end_layout

\begin_layout Subsubsection
Knotenkapazitäten
\end_layout

\begin_layout Standard
Alle Knoten werden in zwei Knoten geteilt, die mit einer Kante verbunden
 werden, die die Knotenkapatzität als Kapazität hat.
\end_layout

\begin_layout Subsection
Anwendungen des Max-Flow-Min-Cut-Theorems
\end_layout

\begin_layout Standard
Hier könnten einige Anwendungen stehen, tun sie aber nicht.
\end_layout

\begin_layout Proposition
Es gilt das 
\series bold
Min-Flow-Max-Cut-Theorem
\end_layout

\begin_layout Proposition
\begin_inset Formula 
\[
\min_{\left(s,t\right)\text{-Fluss }f}\left|f\right|=\max_{\left(s,t\right)\text{-Schnitt }\left(S:T\right)}\sum_{u\in S,v\in T}l\left(u,v\right)-\sum_{u\in S,v\in T}c\left(v,u\right).
\]

\end_inset


\end_layout

\begin_layout Section
Schnitte in ungerichteten Graphen
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
Minimaler-Schnitt-Problem
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Plain Layout
Gegeben ist ein zusammenhängender ungerichteter Graph 
\begin_inset Formula $G=\left(V,E\right)$
\end_inset

 mit positiven Kantengewichten 
\begin_inset Formula $c_{e},e\in E$
\end_inset

.
 Zu bestimmen ist eine Knotenmenge 
\begin_inset Formula $W\subseteq V,\emptyset\neq W\neq V$
\end_inset

, so dass 
\begin_inset Formula $c\left(\delta\left(W\right)\right)$
\end_inset

 minimal ist.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Der Algorithmus von Nagamochi und Ibaraki
\end_layout

\begin_layout Definition*
Der Graph 
\begin_inset Formula $G_{vw}$
\end_inset

 entsteht durch 
\series bold
Identifikation
\series default
 der beiden Knoten 
\begin_inset Formula $v$
\end_inset

 und 
\begin_inset Formula $w$
\end_inset

, was bedeutet, dass sie durch einen neuen Knoten 
\begin_inset Formula $x$
\end_inset

 ersetzt werden.
\end_layout

\begin_layout Lemma
Die Schnitte in 
\begin_inset Formula $G_{vw}$
\end_inset

 korrespondieren zu den Schnitten von 
\begin_inset Formula $G$
\end_inset

, die 
\begin_inset Formula $v$
\end_inset

 und 
\begin_inset Formula $w$
\end_inset

 nicht trennen.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Lemma
Seien 
\begin_inset Formula $p,q,r\in V$
\end_inset

.
 Es gilt 
\begin_inset Formula $f\left(G:p,q\right)\geq\min\left\{ f\left(G:p,r\right),f\left(G:q,r\right)\right\} $
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Definition*
Sei 
\begin_inset Formula $v_{1},v_{2},\ldots,v_{n}$
\end_inset

 eine Anordnung der Knoten von 
\begin_inset Formula $G$
\end_inset

 und sei 
\begin_inset Formula $V_{i}=\left\{ v_{1},\ldots,v_{i}\right\} ,1\leq i\leq n$
\end_inset

.
 Die Anordnung heißt 
\series bold
legal
\series default
, falls 
\begin_inset Formula $c\left(\delta\left(V_{i-1}\right)\cap\delta\left(v_{i}\right)\right)\geq c\left(\delta\left(V_{i-1}\right)\cap\delta\left(v_{j}\right)\right)$
\end_inset

, für alle 
\begin_inset Formula $2\leq i\leq j\leq n$
\end_inset

.
\end_layout

\begin_layout Definition*
Man startet also mit irgendeinem Knoten und wählt als nächsten Knoten einen
 aus, dessen Summe der Kapazitäten der Kanten zu bereits gewählten Knoten
 maximal ist.
\end_layout

\begin_layout Proposition
Wenn 
\begin_inset Formula $v_{1},v_{2},\ldots,v_{n}$
\end_inset

 eine legale Ordnung für 
\begin_inset Formula $G$
\end_inset

 ist, dann ist 
\begin_inset Formula $\delta\left(v_{n}\right)$
\end_inset

 ein minimaler 
\begin_inset Formula $\left(v_{n},v_{n-1}\right)$
\end_inset

-Schnitt in 
\begin_inset Formula $G$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "NagamochiIbaraki"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
\shape italic
NagamochiIbaraki
\series default

\begin_inset Formula $\left(G,c\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Setze 
\begin_inset Formula $U=+\infty$
\end_inset

, 
\begin_inset Formula $C$
\end_inset

 undefiniert, 
\begin_inset Formula $k=n=\left|V\right|$
\end_inset

, 
\begin_inset Formula $G^{k}=G$
\end_inset

.
\end_layout

\begin_layout Enumerate
Solange 
\begin_inset Formula $k\geq2$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Enumerate
Bestimme eine legale Ordnung 
\begin_inset Formula $v_{1},\ldots,v_{k}$
\end_inset

 von 
\begin_inset Formula $G^{k}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Falls 
\begin_inset Formula $c\left(\delta\left(v_{k}\right)\right)<U$
\end_inset

, setze 
\begin_inset Formula $U=c\left(\delta\left(v_{k}\right)\right)$
\end_inset

 und 
\begin_inset Formula $C=\delta\left(v_{k}\right)$
\end_inset

.
\end_layout

\begin_layout Enumerate
Identifiziere die Knoten 
\begin_inset Formula $v_{k-1}$
\end_inset

 und 
\begin_inset Formula $v_{k}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Setze 
\begin_inset Formula $G^{k-1}=G_{v_{k-1}v_{k}}^{k}$
\end_inset

 und 
\begin_inset Formula $k=k-1$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Enumerate
\begin_inset Formula $U$
\end_inset

 ist Kapazität eines minimalen Schnitts in 
\begin_inset Formula $G$
\end_inset

 und ein zugehöriger Schnitt lässt sich aus 
\begin_inset Formula $C$
\end_inset

 konstruieren.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Laufzeit: 
\begin_inset Formula $\mathcal{O}\left(V^{3}\right)$
\end_inset

 oder 
\begin_inset Formula $\mathcal{O}\left(V^{2}+VE\log V\right)$
\end_inset


\end_layout

\begin_layout Subsection
Der Algorithmus von Karger
\end_layout

\begin_layout Standard
Dies ist ein 
\series bold
randomisierter
\series default
 Algorithmus, er liefert also mit einer gewissen Chance ein falsches Ergebnis.
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "Karger"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
\shape italic
Karger
\series default

\begin_inset Formula $\left(G,c\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Solange 
\begin_inset Formula $G$
\end_inset

 mehr als zwei Knoten enthält:
\end_layout

\begin_deeper
\begin_layout Enumerate
Wähle eine Kante 
\begin_inset Formula $f$
\end_inset

 von 
\begin_inset Formula $G$
\end_inset

 mit Wahrscheinlichkeit 
\begin_inset Formula $c_{f}/{\displaystyle \sum_{e\in E}}c_{e}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Ersetze 
\begin_inset Formula $G$
\end_inset

 durch 
\begin_inset Formula $G_{vw}$
\end_inset

, wobei 
\begin_inset Formula $f=vw$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Enumerate
Gib den eindeutigen Schnitt von 
\begin_inset Formula $G$
\end_inset

 aus.
\end_layout

\end_inset


\end_layout

\begin_layout Proposition
Sei 
\begin_inset Formula $B\subseteq E$
\end_inset

 ein minimaler Schnitt von 
\begin_inset Formula $G$
\end_inset

.
 Dann liefert der Algorithmus von Karger das Ergebnis 
\begin_inset Formula $B$
\end_inset

 mit einer Wahrscheinlichkeit von mindestens 
\begin_inset Formula $\frac{2}{n\left(n-1\right)}$
\end_inset

.
\end_layout

\begin_layout Corollary
Sei 
\begin_inset Formula $B$
\end_inset

 minimaler Schnitt von 
\begin_inset Formula $G$
\end_inset

 und 
\begin_inset Formula $k$
\end_inset

 eine positive ganze Zahl.
 Die Wahrscheinlichkeit, dass der Algorithmus von Karger bei 
\begin_inset Formula $k\cdot n^{2}$
\end_inset

 Aufrufen nicht mindestens einmal 
\begin_inset Formula $B$
\end_inset

 als Ausgabe liefert, ist höchstens 
\begin_inset Formula $e^{-2k}$
\end_inset

.
\end_layout

\begin_layout Subsection
Minimale Schnitte zwischen allen Knotenpaaren
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
Alle-minimaler-Schnitte-Problem
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Plain Layout
Gegeben ist ein Graph 
\begin_inset Formula $G=\left(V,E\right)$
\end_inset

 mit positiven Kantengewichten und eine Knotenmenge 
\begin_inset Formula $K\subseteq V$
\end_inset

 (
\series bold
Terminalknoten
\series default
).
 Zu bestimmen sind alle minimalen 
\begin_inset Formula $\left(u,v\right)$
\end_inset

-Schnitte für 
\begin_inset Formula $u,v\in K$
\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
ToDo
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
Hier könnte ihr Algorithmus stehen!
\end_layout

\end_inset


\end_layout

\begin_layout Section
Flüsse mit minimalen Kosten
\end_layout

\begin_layout Standard
Betrachtet wird hier der Digraph 
\begin_inset Formula $D=\left(V,A\right)$
\end_inset

 mit 
\series bold
Kapazitäten
\series default
 
\begin_inset Formula $c_{uv}$
\end_inset

, 
\series bold
Kosten
\series default
 
\begin_inset Formula $w_{uv}$
\end_inset

, und einer Zahl 
\begin_inset Formula $b_{u}$
\end_inset

.
\end_layout

\begin_layout Standard
Knoten 
\begin_inset Formula $u$
\end_inset

 mit 
\begin_inset Formula $b_{u}>0$
\end_inset

 nennen wir 
\series bold
Quelle
\series default
 mit 
\series bold
Vorrat
\series default
/
\series bold
Angebot
\series default
 
\begin_inset Formula $b_{u}$
\end_inset

, bei 
\begin_inset Formula $b_{u}<0$
\end_inset

 nennen wir sie 
\series bold
Senke
\series default
 mit 
\series bold
Nachfrage
\series default
 
\begin_inset Formula $b_{u}$
\end_inset

, bei 
\begin_inset Formula $b_{u}=0$
\end_inset

 heißen sie 
\series bold
Durchflussknoten
\series default
 und müssen die Flusserhaltung erfüllen.
 
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
Minimale-Kosten-Fluss-Problem
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Plain Layout
Gegeben sind ein gerichteter Graph 
\begin_inset Formula $D=\left(V,A\right)$
\end_inset

 mit Kantenkapazitäten und -kosten sowie vorgegebenen Knotenbilanzen.
 Es ist ein Fluss gesucht, der alle Kapazitäten erfüllt, an den Knoten die
 Flussbilanzen realisiert und unter allen diesen Flussen minimale Kosten
 hat.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Als lineares Programm formuliert:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
\min\sum_{\left(u,v\right)\in A}w_{uv}f_{uv}\\
\sum_{v:\left(u,v\right)\in A}f_{uv}-\sum_{v:\left(v,u\right)\in A}f_{vu}=b_{u} & \text{, für alle }u\in V\\
0\leq f_{uv}\leq c_{uv} & \text{, für alle }\left(u,v\right)\in A
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Annahmen:
\begin_inset Newline newline
\end_inset

Alle Daten sind ganzzahlig, es gibt so viel Angebot wie Nachfrage, es existiert
 ein zulässiger Fluss, alle Kosten und Kapazitäten sind nicht-negativ, es
 gibt keine antiparallelen Kanten (nur aus Notationsgründen).
\end_layout

\begin_layout Standard
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Standard
Ein zulässiger Fluss lässt sich durch zusätzliche Knoten 
\begin_inset Formula $s^{\ast}$
\end_inset

 und 
\begin_inset Formula $t^{\ast}$
\end_inset

 und Kanten mit Kapazität von Angebot bzw.
 Nachfrage nachweisen.
\end_layout

\begin_layout Subsection
Das klassische Transportproblem
\end_layout

\begin_layout Standard
\begin_inset Box Shadowbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
(Unkapazitiertes) Transportproblem
\end_layout

\begin_layout Plain Layout
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Plain Layout
Ein Produkt wird in 
\begin_inset Formula $m$
\end_inset

 Anbieterorten produziert und in 
\begin_inset Formula $n$
\end_inset

 Nachfrageorten benötigt.
 Am Anbieterort 
\begin_inset Formula $i$
\end_inset

 liegt ein Lagervorrat 
\begin_inset Formula $a_{i}$
\end_inset

 vor, am Nachfrageort 
\begin_inset Formula $j$
\end_inset

 besteht der Bedarf 
\begin_inset Formula $b_{j}$
\end_inset

 .
 (Es gelte 
\begin_inset Formula $\sum a_{i}$
\end_inset

 = 
\begin_inset Formula $\sum b_{j}$
\end_inset

 .) Der Transport einer Einheit des Produkts vom Ort 
\begin_inset Formula $i$
\end_inset

 zum Ort 
\begin_inset Formula $j$
\end_inset

 kostet 
\begin_inset Formula $w_{ij}$
\end_inset

 .
 Zu bestimmen ist ein Transportplan, der alle Nachfragen erfüllt und minimale
 Kosten hat.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Als lineares Programm formuliert:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
\min\sum_{i=1}^{m}\sum_{j=1}^{n}w_{ij}x_{ij}\\
\sum_{j=1}^{n}x_{ij}=a_{i} & i=1,\ldots,m\\
\sum_{i=1}^{m}x_{ij}=b_{i} & j=1,\ldots,n\\
x_{ij}\geq0 & i=1,\ldots,m,j=1,\ldots,n
\end{align*}

\end_inset


\end_layout

\begin_layout Subsubsection
Die Nordwestecken-Regel
\end_layout

\begin_layout Standard
...liefert eine Startlösung.
\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
NW
\series default

\begin_inset Formula $\left(a,b\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Setze 
\begin_inset Formula $i=j=1$
\end_inset

 und 
\begin_inset Formula $x_{11}=\min\left\{ a_{1},b_{1}\right\} $
\end_inset

.
\end_layout

\begin_layout Enumerate
Solange 
\begin_inset Formula $i<m$
\end_inset

 oder 
\begin_inset Formula $j<n$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Enumerate
Setze 
\begin_inset Formula $a_{i}=a_{i}-x_{ij}$
\end_inset

 und 
\begin_inset Formula $b_{j}=b_{j}-x_{ij}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Falls 
\begin_inset Formula $a_{i}=0$
\end_inset

, dann 
\begin_inset Formula $i=i+1$
\end_inset

, sonst 
\begin_inset Formula $j=j+1$
\end_inset

.
\end_layout

\begin_layout Enumerate
Setze 
\begin_inset Formula $x_{ij}=\min\left\{ a_{i},b_{j}\right\} $
\end_inset

.
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Subsubsection
Die Stepping-Stone-Methode
\end_layout

\begin_layout Proposition
Eine Teilmenge 
\begin_inset Formula $E$
\end_inset

 der Spalten von 
\begin_inset Formula $T$
\end_inset

 ist genau dann linear unabhängig, wenn die zugehörige Kantenmenge in 
\begin_inset Formula $K_{mn}$
\end_inset

 keinen Kreis enthält.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Proposition
\begin_inset Formula $E$
\end_inset

 ist eine Teilmenge von 
\begin_inset Formula $m+n-1$
\end_inset

 linear unabhängigen Spalten von 
\begin_inset Formula $T$
\end_inset

 genau dann, wenn der zugehörige Teilgraph von 
\begin_inset Formula $K_{mn}$
\end_inset

 ein aufspannender Baum ist.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box ovalbox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout
Der Algorithmus sollte einfach auswendig gelernt werden.
 Probieren, studieren und so...
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Das kapazitierte Transportproblem
\end_layout

\begin_layout Standard
Es existieren nun Kantenkapazitäten 
\begin_inset Formula $0\leq x_{ij}\leq c_{ij}$
\end_inset

.
 Man fügt die Extraknoten 
\begin_inset Formula $m+1$
\end_inset

 und 
\begin_inset Formula $n+1$
\end_inset

 ein.
 Es gilt:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{align*}
a_{m+1}=b_{n+1}= & \sum_{i=1}^{m}a_{i}\\
w_{i,n+1}=w_{m+1,j}= & M,\;i=1,\ldots,m,\;j=1,\ldots,n\\
w_{m+1,n+1}= & 0\\
c_{i,n+1}= & a_{i},\;i=1,\ldots,m\\
c_{m+1,j}= & b_{j},\;j=1,\ldots,n\\
c_{m+1,n+1}= & \sum_{i=1}^{m}a_{i}
\end{align*}

\end_inset


\end_layout

\begin_layout Standard
Triviale Startlösung: Alle liefern an 
\begin_inset Formula $n+1$
\end_inset

, alle kriegen von 
\begin_inset Formula $m+1$
\end_inset

.
\begin_inset Newline newline
\end_inset

Das Originaleproblem hat eine Lösung, wenn das transformierte Problem eine
 Lösung hat, die die neuen Knoten nicht mit alten Knoten verbindet.
\end_layout

\begin_layout Subsubsection
Varianten und Erweiterungen
\end_layout

\begin_layout Standard
<keine>
\end_layout

\begin_layout Subsection
Optimalitätsbedingungen
\end_layout

\begin_layout Definition*
Auch hier gibt es ein 
\series bold
reduziertes Netzwerk
\series default
 
\begin_inset Formula $D_{f}=\left(V,A_{f}\right)$
\end_inset

 mit Restkapazitäten 
\begin_inset Formula $r_{uv}$
\end_inset

 zum Fluss 
\begin_inset Formula $f$
\end_inset

.
 Für eine Kante 
\begin_inset Formula $\left(u,v\right)\in A$
\end_inset

 gilt:
\end_layout

\begin_layout Definition*
\begin_inset Formula 
\begin{align*}
f_{uv}<c_{uv}\Rightarrow & \left(u,v\right)\in A_{f}\text{, mit Kosten \ensuremath{+w_{uv}} und }r_{uv}=c_{uv}-f_{uv}\\
f_{uv}>0\Rightarrow & \left(v,u\right)\in A_{f}\text{, mit Kosten \ensuremath{-w_{uv}} und }r_{uv}=f_{uv}
\end{align*}

\end_inset


\end_layout

\begin_layout Proposition

\series bold
(Negativer-Kreis-Bedingung)
\series default
 Ein zulässiger Fluss 
\begin_inset Formula $f^{\ast}$
\end_inset

 ist genau dann optimal, wenn das reduzierte Netzwerk 
\begin_inset Formula $D_{f^{\ast}}$
\end_inset

 keinen Kreis enthält, so dass die Summe der Kosten seiner Kanten negativ
 ist.
\end_layout

\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Proposition

\series bold
(Reduzierte-Kosten-Bedingung)
\series default
 Ein zulässiger Fluss 
\begin_inset Formula $f^{\ast}$
\end_inset

ist genau dann optimal, wenn es einen Vektor 
\begin_inset Formula $\pi$
\end_inset

 gibt, so dass 
\begin_inset Formula $w_{uv}^{\pi}\geq0$
\end_inset

, für alle 
\begin_inset Formula $\left(u,v\right)\in A_{f^{\ast}}$
\end_inset

.
\end_layout

\begin_layout Subsection
Negaive-Kreise-Verfahren
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "CycleCanceling"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
CycleCanceling
\series default

\begin_inset Formula $\left(D,c,w,b\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Bestimme einen zulässigen Fluss 
\begin_inset Formula $f$
\end_inset

.
\end_layout

\begin_layout Enumerate
Generiere das reduzierte Netzwerk 
\begin_inset Formula $D_{f}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Enthält 
\begin_inset Formula $D_{f}$
\end_inset

 keinen negativen Kreis, dann 
\emph on
Stop
\emph default
(
\begin_inset Quotes gld
\end_inset


\begin_inset Formula $f$
\end_inset

 is kostenminimal
\begin_inset Quotes grd
\end_inset

).
 Andernfalls sein 
\begin_inset Formula $C$
\end_inset

 ein negativer Kreis.
\end_layout

\begin_layout Enumerate
Bestimme die Restkapazität 
\begin_inset Formula $\Delta$
\end_inset

 von 
\begin_inset Formula $C$
\end_inset

 und setze 
\begin_inset Formula $f_{uv}=f_{uv}+\Delta$
\end_inset

 für alle 
\begin_inset Formula $\left(u,v\right)\in C$
\end_inset

.
 Gehe zu (2).
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Laufzeit: 
\begin_inset Formula $\mathcal{O}\left(V^{2}AUW\right)$
\end_inset

 mit 
\begin_inset Formula $U$
\end_inset

 und 
\begin_inset Formula $W$
\end_inset

 
\end_layout

\begin_layout Proposition
Sind alle Daten 
\begin_inset Formula $c_{uv}$
\end_inset

, 
\begin_inset Formula $\left(u,v\right)\in A$
\end_inset

, und 
\begin_inset Formula $b_{u}$
\end_inset

, 
\begin_inset Formula $u\in V$
\end_inset

, ganzzahlig, dann existiert ein kostenminimaler Fluss mit ganzzahligen
 Werten.
\end_layout

\begin_layout Subsection
Kürzerste-Wege-Verfahren
\end_layout

\begin_layout Definition*
Für einen 
\series bold
Pseudofluss
\series default
 
\begin_inset Formula $f$
\end_inset

 gilt 
\begin_inset Formula $0\leq f_{uv}\leq c_{uv}$
\end_inset

 für alle 
\begin_inset Formula $\left(u,v\right)\in A$
\end_inset

.
 
\begin_inset Formula $f=0$
\end_inset

 
\series bold
ist
\series default
 ein Pseudofluss.
\end_layout

\begin_layout Definition*
Für 
\begin_inset Formula $v\in V$
\end_inset

 ist die Knotenbilanz 
\begin_inset Formula $e\left(v\right)=b_{v}\sum_{\left(u,v\right)\in A}f_{uv}-\sum_{\left(v,u\right)\in A}f_{vu}$
\end_inset

.
\end_layout

\begin_layout Definition*
Wir nennen Knoten mit 
\begin_inset Formula $e\left(v\right)>0$
\end_inset

 
\series bold
Überschussknoten
\series default
, mit 
\begin_inset Formula $e\left(v\right)<0$
\end_inset

 
\series bold
Defizitknoten
\series default
, mit 
\begin_inset Formula $e\left(v\right)=0$
\end_inset

 
\series bold
balanciert
\series default
.
\end_layout

\begin_layout Lemma
Seien 
\begin_inset Formula $f$
\end_inset

 ein Pseudofluss und 
\begin_inset Formula $\pi$
\end_inset

 ein Vektor von Knotenpotentialen, so dass die Optimalitätsbedingungen 
\begin_inset Formula $w_{uv}^{\pi}=\overline{w}_{uv}-\pi_{u}+\pi_{v}\geq0$
\end_inset

, für alle 
\begin_inset Formula $\left(u,v\right)\in A$
\end_inset

, erfüllt sind.
 Für jeden Knoten 
\begin_inset Formula $v\in V$
\end_inset

 sei 
\begin_inset Formula $\delta\left(s,v\right)$
\end_inset

 die Länge eines kürzesten Weges in 
\begin_inset Formula $D_{f}$
\end_inset

 (bezüglich der Kantenlänge 
\begin_inset Formula $w^{\pi}$
\end_inset

) von einem ausgezeichneten Knoten 
\begin_inset Formula $s$
\end_inset

 zu 
\begin_inset Formula $v$
\end_inset

.
\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
a) Der Pseudofluss 
\begin_inset Formula $f$
\end_inset

 erfüllt auch die Optimaitätsbedingungen mit den Knotenpotentialen 
\begin_inset Formula $\pi^{\prime}$
\end_inset

 definiert durch 
\begin_inset Formula $\pi_{v}^{\prime}=\pi_{v}-\delta\left(s,v\right)$
\end_inset

, für alle 
\begin_inset Formula $v\in V$
\end_inset

.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
b) Die reduzierten Kosten 
\begin_inset Formula $w_{uv}^{\pi^{\prime}}$
\end_inset

 sind Null für alle Kanten 
\begin_inset Formula $\left(u,v\right)$
\end_inset

, die auf einem kürzesten Weg von 
\begin_inset Formula $s$
\end_inset

 zu einem anderen Knoten liegen.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator plain
\end_inset


\end_layout

\begin_layout Lemma
Sei 
\begin_inset Formula $f$
\end_inset

 ein Pseudofluss, der die Reduzierte-Kosten-Bedingung erfüllt.
 Der Pseudofluss 
\begin_inset Formula $f^{\prime}$
\end_inset

 werde durch Augmentierung entlang eines kürzesten Weges (von 
\begin_inset Formula $s$
\end_inset

 nach 
\begin_inset Formula $l$
\end_inset

 in 
\begin_inset Formula $D_{f}$
\end_inset

 bezpglich der Kantenlängen 
\begin_inset Formula $w^{\pi}$
\end_inset

) erhalten.
 Dann erfüllt 
\begin_inset Formula $f^{\prime}$
\end_inset

 die Reduzierte-Kosten-Bedingung bzgl.
 
\begin_inset Formula $\pi^{\prime}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "SuccShortestPath"

\end_inset


\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
SuccessiveShortestPaths
\begin_inset Formula $\left(D,c,w,b\right)$
\end_inset


\series default
:
\end_layout

\begin_layout Enumerate
Setze 
\begin_inset Formula $f=0$
\end_inset

, 
\begin_inset Formula $\pi=0$
\end_inset

, und 
\begin_inset Formula $e\left(u\right)=b_{u}$
\end_inset

, für alle 
\begin_inset Formula $u\in V$
\end_inset

.
\end_layout

\begin_layout Enumerate
Solange noch Überschussknoten existieren:
\end_layout

\begin_deeper
\begin_layout Enumerate
Wähle einen Überschussknoten 
\begin_inset Formula $s$
\end_inset

 und einen Defizitknoten 
\begin_inset Formula $t$
\end_inset

.
\end_layout

\begin_layout Enumerate
Bestimme die Kürzeste-Wege-Distanzen 
\begin_inset Formula $\delta\left(s,i\right)$
\end_inset

 von 
\begin_inset Formula $s$
\end_inset

 zu allen anderen Knoten 
\begin_inset Formula $i$
\end_inset

 in 
\begin_inset Formula $D_{f}$
\end_inset

 bezüglich der Kantenlängen 
\begin_inset Formula $w^{\pi}$
\end_inset

.
 Sei 
\begin_inset Formula $P$
\end_inset

 der kürzeste Weg von 
\begin_inset Formula $s$
\end_inset

 nach 
\begin_inset Formula $t$
\end_inset

.
\end_layout

\begin_layout Enumerate
Setze 
\begin_inset Formula $\pi_{u}=\pi_{u}-\delta\left(s,u\right)$
\end_inset

, für alle 
\begin_inset Formula $u\in V$
\end_inset

.
\end_layout

\begin_layout Enumerate
Augmentiere 
\begin_inset Formula $f$
\end_inset

 entlang 
\begin_inset Formula $P$
\end_inset

 um den Betrag 
\begin_inset Formula $\min\left\{ c_{f}\left(P\right),e\left(s\right)-e\left(t\right)\right\} $
\end_inset

, wobei 
\begin_inset Formula $c_{f}\left(P\right)$
\end_inset

 die Restkapazität des Weges 
\begin_inset Formula $P$
\end_inset

 ist.
\end_layout

\begin_layout Enumerate
Bestimme die neuen reduzierten Kosten und das neue reduzierte Netzwerk.
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Standard
Laufzeit: 
\begin_inset Formula $\mathcal{O}\left(BV^{2}\right)$
\end_inset

 oder 
\begin_inset Formula $\mathcal{O}\left(BA\log V\right)$
\end_inset

 mit 
\begin_inset Formula $B$
\end_inset

 als Summe über alle Angebote.
\end_layout

\begin_layout Standard
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "SuccShortestPath2"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
SuccessiveShortestPaths2
\begin_inset Formula $\left(D,c,w,b\right)$
\end_inset


\series default
:
\end_layout

\begin_layout Enumerate
Setze 
\begin_inset Formula $f=0$
\end_inset

, 
\begin_inset Formula $\pi=0$
\end_inset

, und 
\begin_inset Formula $e\left(u\right)=b_{u}$
\end_inset

, für alle 
\begin_inset Formula $u\in V$
\end_inset

.
\end_layout

\begin_layout Enumerate
Solange ein Überschussknoten existiert:
\end_layout

\begin_deeper
\begin_layout Enumerate
Wähle einen Überschussknoten 
\begin_inset Formula $s$
\end_inset

.
\end_layout

\begin_layout Enumerate
Führe den Dijkstra-Algorithmus mit Startknoten 
\begin_inset Formula $s$
\end_inset

 aus und stoppe ihn, sobald ein Defizitknoten permanent markiert wird.
 Wird kein Defizitknoten erreicht, 
\emph on
Stop
\emph default
(
\begin_inset Quotes gld
\end_inset

Problem unlösbar
\begin_inset Quotes grd
\end_inset

).
\end_layout

\begin_layout Enumerate
Sei 
\begin_inset Formula $t$
\end_inset

 der erste permanent markierte Defizitknoten.
\end_layout

\begin_layout Enumerate
Setze 
\begin_inset Formula $\pi_{u}=\begin{cases}
\pi_{u}-\delta\left(s,u\right) & u\text{ ist permanent markiert worden,}\\
\pi_{u}-\delta\left(s,t\right) & \text{sonst}.
\end{cases}$
\end_inset


\end_layout

\begin_layout Enumerate
Augmentiere 
\begin_inset Formula $f$
\end_inset

 auf dem Weg von 
\begin_inset Formula $s$
\end_inset

 nach 
\begin_inset Formula $t$
\end_inset

 um den maximal möglichen Betrag.
\end_layout

\begin_layout Enumerate
Bestimme die neuen reduzierten Kosten und das neue reduzierte Netzwerk.
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Standard
Dieser Algorithmus funktioniert auch ohne die Annahme, dass alle Kürzeste-Wege-D
istanzen existieren.
\end_layout

\begin_layout Subsection
Der primale Simplex-Algorithmus
\end_layout

\begin_layout Standard
Omitted
\end_layout

\begin_layout Proposition
—
\end_layout

\begin_layout Subsection
Skalierung der Kapazitäten
\end_layout

\begin_layout Definition*
In einer 
\begin_inset Formula $\Delta$
\end_inset

-Skalierungs-Phase erfolgen jeweils Augmentierungen um mindestens den Betrag
 
\begin_inset Formula $\Delta$
\end_inset

.
 Das 
\begin_inset Formula $\Delta$
\end_inset

-reduzierte Netzwerk enthält nur Kanten mit mindestens Restkapazität 
\begin_inset Formula $\Delta$
\end_inset

 und Quellen (Senken) mit mindestens Überschuss (Defizit) 
\begin_inset Formula $\Delta$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "CapacityScaling"

\end_inset


\end_layout

\begin_layout Standard
Es gilt 
\begin_inset Formula $U=\max\left\{ \max\left\{ c_{uv}|\left(u,v\right)\in A\right\} ,\max\left\{ b_{u}|b_{u}>0\right\} ,\max\left\{ -b_{u}|b_{u}<0\right\} \right\} $
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Box Doublebox
position "t"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
use_makebox 0
width "100col%"
special "none"
height "1in"
height_special "totalheight"
thickness "0.4pt"
separation "3pt"
shadowsize "4pt"
framecolor "black"
backgroundcolor "none"
status open

\begin_layout Plain Layout

\series bold
CapacityScaling
\series default

\begin_inset Formula $\left(D,c,w,b\right)$
\end_inset

:
\end_layout

\begin_layout Enumerate
Setze 
\begin_inset Formula $f=0$
\end_inset

, 
\begin_inset Formula $\pi=0$
\end_inset

, 
\begin_inset Formula $\Delta=2^{\left\lfloor \log_{2}U\right\rfloor }$
\end_inset

.
\end_layout

\begin_layout Enumerate
Solange 
\begin_inset Formula $\Delta\geq1:$
\end_inset


\end_layout

\begin_deeper
\begin_layout Enumerate
Für alle Kanten 
\begin_inset Formula $\left(u,v\right)\in A_{f}$
\end_inset

 mit 
\begin_inset Formula $r_{uv}\geq\Delta$
\end_inset

 und 
\begin_inset Formula $w_{uv}^{\pi}<0$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Enumerate
Setze 
\begin_inset Formula $f_{uv}=f_{uv}+r_{uv}$
\end_inset

, 
\begin_inset Formula $e\left(u\right)=e\left(u\right)-r_{uv}$
\end_inset

 und 
\begin_inset Formula $e\left(v\right)=e\left(v\right)+r_{uv}$
\end_inset

.
\end_layout

\begin_layout Enumerate
Setze 
\begin_inset Formula $A_{f}=A_{f}\setminus\left\{ \left(u,v\right)\right\} \cup\left\{ \left(v,u\right)\right\} $
\end_inset

 mit 
\begin_inset Formula $r_{vu}=f_{uv}$
\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Setze 
\begin_inset Formula $S\left(\Delta\right)=\left\{ v|e\left(v\right)\geq\Delta\right\} $
\end_inset

 und 
\begin_inset Formula $T\left(\Delta\right)=\left\{ v|e\left(v\right)\leq-\Delta\right\} $
\end_inset


\end_layout

\begin_layout Enumerate
Solange 
\begin_inset Formula $S\left(\Delta\right)=\emptyset$
\end_inset

 und 
\begin_inset Formula $T\left(\Delta\right)=\emptyset$
\end_inset

:
\end_layout

\begin_deeper
\begin_layout Enumerate
Wähle 
\begin_inset Formula $s\in S\left(\Delta\right)$
\end_inset

 und 
\begin_inset Formula $t\in T\left(\Delta\right)$
\end_inset

.
\end_layout

\begin_layout Enumerate
Berechne Kürzeste-Wege-Distanzen 
\begin_inset Formula $\delta\left(s,v\right)$
\end_inset

, für alle 
\begin_inset Formula $v\in V$
\end_inset

.
 Sei 
\begin_inset Formula $P$
\end_inset

 der kürzeste 
\begin_inset Formula $\left(s,t\right)$
\end_inset

-Weg.
\end_layout

\begin_layout Enumerate
Setze 
\begin_inset Formula $\pi_{v}=\pi_{v}-\delta\left(s,v\right)$
\end_inset

, für alle 
\begin_inset Formula $v\in V$
\end_inset

.
\end_layout

\begin_layout Enumerate
Augmentiere entlang 
\begin_inset Formula $P$
\end_inset

 um 
\begin_inset Formula $\min\left\{ c_{f}\left(P\right),e\left(s\right),-e\left(t\right)\right\} $
\end_inset

.
\end_layout

\begin_layout Enumerate
Ändere 
\begin_inset Formula $S\left(\Delta\right)$
\end_inset

, 
\begin_inset Formula $T\left(\Delta\right)$
\end_inset

 und 
\begin_inset Formula $D_{f}$
\end_inset

 entsprechend.
\end_layout

\end_deeper
\begin_layout Enumerate
Setze 
\begin_inset Formula $\Delta=\Delta/2$
\end_inset

.
\end_layout

\end_deeper
\end_inset


\end_layout

\begin_layout Standard
Laufzeit: 
\begin_inset Formula $\mathcal{O}\left(AV^{2}\log U\right)$
\end_inset

 oder 
\begin_inset Formula $\mathcal{O}\left(A^{2}\log V\log U\right)$
\end_inset

 mit Dijkstra.
 
\end_layout

\begin_layout Proposition
Die Laufzeit von 
\emph on
CapacityScaling
\emph default
 ist richtig.
\end_layout

\begin_layout Subsection
Minimale-Mittlere-Kreise-Verfahren
\end_layout

\begin_layout Standard
........
\end_layout

\end_body
\end_document
